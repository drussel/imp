# Autogenerated file, run tools/build/setup_cmake.py to regenerate

execute_process(COMMAND ${PROJECT_SOURCE_DIR}/tools/build/setup_application.py
                          --name=saxs_merge
                          --datapath=${IMP_DATAPATH}
                           --source=${PROJECT_SOURCE_DIR}
                           RESULT_VARIABLE status
                           WORKING_DIRECTORY ${PROJECT_BINARY_DIR})
if(NOT ${status})
message(STATUS "Application saxs_merge ok")

include_directories(${ANN_INCLUDE_PATH}
        ${BOOST.FILESYSTEM_INCLUDE_PATH}
        ${BOOST.GRAPH_INCLUDE_PATH}
        ${BOOST.PROGRAMOPTIONS_INCLUDE_PATH}
        ${BOOST.REGEX_INCLUDE_PATH}
        ${BOOST.SYSTEM_INCLUDE_PATH}
        ${CGAL_INCLUDE_PATH}
        ${CHOLMOD_INCLUDE_PATH}
        ${EIGEN3_INCLUDE_PATH}
        ${GPERFTOOLS_INCLUDE_PATH}
        ${GSL_INCLUDE_PATH}
        ${LOG4CXX_INCLUDE_PATH}
        ${TCMALLOC_HEAPCHECKER_INCLUDE_PATH}
        ${TCMALLOC_HEAPPROFILER_INCLUDE_PATH} )
link_directories(${ANN_LINK_PATH}
        ${BOOST.FILESYSTEM_LINK_PATH}
        ${BOOST.GRAPH_LINK_PATH}
        ${BOOST.PROGRAMOPTIONS_LINK_PATH}
        ${BOOST.REGEX_LINK_PATH}
        ${BOOST.SYSTEM_LINK_PATH}
        ${CGAL_LINK_PATH}
        ${CHOLMOD_LINK_PATH}
        ${EIGEN3_LINK_PATH}
        ${GPERFTOOLS_LINK_PATH}
        ${GSL_LINK_PATH}
        ${LOG4CXX_LINK_PATH}
        ${TCMALLOC_HEAPCHECKER_LINK_PATH}
        ${TCMALLOC_HEAPPROFILER_LINK_PATH})



foreach (test ${pytests})
   GET_FILENAME_COMPONENT(name ${test} NAME_WE)
  add_test(${name} ${PROJECT_BINARY_DIR}/imppy.sh "python" ${test})
endforeach(test)


else()
message(STATUS "Application saxs_merge disabled")
endif()
# Autogenerated file, run build/tools/setup_cmake.py to regenerate

execute_process(COMMAND ${PROJECT_SOURCE_DIR}/tools/build/setup_application.py
                          --name=integrative_docking
                          --datapath=${IMP_DATAPATH}
                           --source=${PROJECT_SOURCE_DIR}
                           RESULT_VARIABLE status
                           WORKING_DIRECTORY ${PROJECT_BINARY_DIR})
if(NOT ${status})
message(STATUS "Application integrative_docking ok")

if (${IMP_USE_CUSTOM_CXX_FLAGS})
set(CMAKE_CXX_FLAGS ${IMP_BIN_CXX_FLAGS})
endif()

include_directories(${ANN_INCLUDE_PATH} ${BOOST.FILESYSTEM_INCLUDE_PATH} ${BOOST.GRAPH_INCLUDE_PATH} ${BOOST.PROGRAMOPTIONS_INCLUDE_PATH} ${BOOST.REGEX_INCLUDE_PATH} ${BOOST.SYSTEM_INCLUDE_PATH} ${CGAL_INCLUDE_PATH} ${GPERFTOOLS_INCLUDE_PATH} ${LOG4CXX_INCLUDE_PATH} ${TCMALLOC_HEAPCHECKER_INCLUDE_PATH} ${TCMALLOC_HEAPPROFILER_INCLUDE_PATH} applications/integrative_docking/em2d_dock/lib applications/integrative_docking/cross_linking/lib applications/integrative_docking/em3d_dock/lib applications/integrative_docking/nmr_rtc/lib applications/integrative_docking/foxsdock/lib)
link_directories(${ANN_LINK_PATH} ${BOOST.FILESYSTEM_LINK_PATH} ${BOOST.GRAPH_LINK_PATH} ${BOOST.PROGRAMOPTIONS_LINK_PATH} ${BOOST.REGEX_LINK_PATH} ${BOOST.SYSTEM_LINK_PATH} ${CGAL_LINK_PATH} ${GPERFTOOLS_LINK_PATH} ${LOG4CXX_LINK_PATH} ${TCMALLOC_HEAPCHECKER_LINK_PATH} ${TCMALLOC_HEAPPROFILER_LINK_PATH})


   add_executable("combine_scores" ${PROJECT_SOURCE_DIR}/applications/integrative_docking/combine_scores/combine_scores.cpp)
   target_link_libraries(combine_scores
    ${IMP_EM_LIBRARY} ${IMP_SAXS_LIBRARY} ${IMP_BASE_LIBRARY} ${IMP_CGAL_LIBRARY} ${IMP_ALGEBRA_LIBRARY} ${IMP_KERNEL_LIBRARY} ${IMP_DISPLAY_LIBRARY} ${IMP_SCORE_FUNCTOR_LIBRARY} ${IMP_CORE_LIBRARY} ${IMP_CONTAINER_LIBRARY} ${IMP_STATISTICS_LIBRARY} ${IMP_ATOM_LIBRARY}
    ${BOOST.FILESYSTEM_LIBRARIES} ${BOOST.PROGRAMOPTIONS_LIBRARIES} ${BOOST.SYSTEM_LIBRARIES} ${BOOST.GRAPH_LIBRARIES} ${GPERFTOOLS_LIBRARIES} ${TCMALLOC_HEAPPROFILER_LIBRARIES} ${TCMALLOC_HEAPCHECKER_LIBRARIES} ${LOG4CXX_LIBRARIES} ${CGAL_LIBRARIES} ${ANN_LIBRARIES} ${BOOST.REGEX_LIBRARIES})
   set_target_properties(combine_scores PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")


   add_executable("recompute_zscore" ${PROJECT_SOURCE_DIR}/applications/integrative_docking/combine_scores/recompute_zscore.cpp)
   target_link_libraries(recompute_zscore
    ${IMP_EM_LIBRARY} ${IMP_SAXS_LIBRARY} ${IMP_BASE_LIBRARY} ${IMP_CGAL_LIBRARY} ${IMP_ALGEBRA_LIBRARY} ${IMP_KERNEL_LIBRARY} ${IMP_DISPLAY_LIBRARY} ${IMP_SCORE_FUNCTOR_LIBRARY} ${IMP_CORE_LIBRARY} ${IMP_CONTAINER_LIBRARY} ${IMP_STATISTICS_LIBRARY} ${IMP_ATOM_LIBRARY}
    ${BOOST.FILESYSTEM_LIBRARIES} ${BOOST.PROGRAMOPTIONS_LIBRARIES} ${BOOST.SYSTEM_LIBRARIES} ${BOOST.GRAPH_LIBRARIES} ${GPERFTOOLS_LIBRARIES} ${TCMALLOC_HEAPPROFILER_LIBRARIES} ${TCMALLOC_HEAPCHECKER_LIBRARIES} ${LOG4CXX_LIBRARIES} ${CGAL_LIBRARIES} ${ANN_LIBRARIES} ${BOOST.REGEX_LIBRARIES})
   set_target_properties(recompute_zscore PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")


   add_executable("cross_links_score" ${PROJECT_SOURCE_DIR}/applications/integrative_docking/cross_linking/cross_links_score.cpp ${PROJECT_SOURCE_DIR}/applications/integrative_docking/cross_linking/lib/CrossLink.cpp ${PROJECT_SOURCE_DIR}/applications/integrative_docking/cross_linking/lib/helpers.cpp)
   target_link_libraries(cross_links_score
    ${IMP_EM_LIBRARY} ${IMP_SAXS_LIBRARY} ${IMP_BASE_LIBRARY} ${IMP_CGAL_LIBRARY} ${IMP_ALGEBRA_LIBRARY} ${IMP_KERNEL_LIBRARY} ${IMP_DISPLAY_LIBRARY} ${IMP_SCORE_FUNCTOR_LIBRARY} ${IMP_CORE_LIBRARY} ${IMP_CONTAINER_LIBRARY} ${IMP_STATISTICS_LIBRARY} ${IMP_ATOM_LIBRARY}
    ${BOOST.FILESYSTEM_LIBRARIES} ${BOOST.PROGRAMOPTIONS_LIBRARIES} ${BOOST.SYSTEM_LIBRARIES} ${BOOST.GRAPH_LIBRARIES} ${GPERFTOOLS_LIBRARIES} ${TCMALLOC_HEAPPROFILER_LIBRARIES} ${TCMALLOC_HEAPCHECKER_LIBRARIES} ${LOG4CXX_LIBRARIES} ${CGAL_LIBRARIES} ${ANN_LIBRARIES} ${BOOST.REGEX_LIBRARIES})
   set_target_properties(cross_links_score PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")


   add_executable("interface_cross_links" ${PROJECT_SOURCE_DIR}/applications/integrative_docking/cross_linking/interface_cross_links.cpp ${PROJECT_SOURCE_DIR}/applications/integrative_docking/cross_linking/lib/CrossLink.cpp ${PROJECT_SOURCE_DIR}/applications/integrative_docking/cross_linking/lib/helpers.cpp)
   target_link_libraries(interface_cross_links
    ${IMP_EM_LIBRARY} ${IMP_SAXS_LIBRARY} ${IMP_BASE_LIBRARY} ${IMP_CGAL_LIBRARY} ${IMP_ALGEBRA_LIBRARY} ${IMP_KERNEL_LIBRARY} ${IMP_DISPLAY_LIBRARY} ${IMP_SCORE_FUNCTOR_LIBRARY} ${IMP_CORE_LIBRARY} ${IMP_CONTAINER_LIBRARY} ${IMP_STATISTICS_LIBRARY} ${IMP_ATOM_LIBRARY}
    ${BOOST.FILESYSTEM_LIBRARIES} ${BOOST.PROGRAMOPTIONS_LIBRARIES} ${BOOST.SYSTEM_LIBRARIES} ${BOOST.GRAPH_LIBRARIES} ${GPERFTOOLS_LIBRARIES} ${TCMALLOC_HEAPPROFILER_LIBRARIES} ${TCMALLOC_HEAPCHECKER_LIBRARIES} ${LOG4CXX_LIBRARIES} ${CGAL_LIBRARIES} ${ANN_LIBRARIES} ${BOOST.REGEX_LIBRARIES})
   set_target_properties(interface_cross_links PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")


   add_executable("em2d_score" ${PROJECT_SOURCE_DIR}/applications/integrative_docking/em2d_dock/em2d_score.cpp ${PROJECT_SOURCE_DIR}/applications/integrative_docking/em2d_dock/lib/Projection.cpp)
   target_link_libraries(em2d_score
    ${IMP_EM_LIBRARY} ${IMP_SAXS_LIBRARY} ${IMP_BASE_LIBRARY} ${IMP_CGAL_LIBRARY} ${IMP_ALGEBRA_LIBRARY} ${IMP_KERNEL_LIBRARY} ${IMP_DISPLAY_LIBRARY} ${IMP_SCORE_FUNCTOR_LIBRARY} ${IMP_CORE_LIBRARY} ${IMP_CONTAINER_LIBRARY} ${IMP_STATISTICS_LIBRARY} ${IMP_ATOM_LIBRARY}
    ${BOOST.FILESYSTEM_LIBRARIES} ${BOOST.PROGRAMOPTIONS_LIBRARIES} ${BOOST.SYSTEM_LIBRARIES} ${BOOST.GRAPH_LIBRARIES} ${GPERFTOOLS_LIBRARIES} ${TCMALLOC_HEAPPROFILER_LIBRARIES} ${TCMALLOC_HEAPCHECKER_LIBRARIES} ${LOG4CXX_LIBRARIES} ${CGAL_LIBRARIES} ${ANN_LIBRARIES} ${BOOST.REGEX_LIBRARIES})
   set_target_properties(em2d_score PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")


   add_executable("em2d_single_score" ${PROJECT_SOURCE_DIR}/applications/integrative_docking/em2d_dock/em2d_single_score.cpp ${PROJECT_SOURCE_DIR}/applications/integrative_docking/em2d_dock/lib/Projection.cpp)
   target_link_libraries(em2d_single_score
    ${IMP_EM_LIBRARY} ${IMP_SAXS_LIBRARY} ${IMP_BASE_LIBRARY} ${IMP_CGAL_LIBRARY} ${IMP_ALGEBRA_LIBRARY} ${IMP_KERNEL_LIBRARY} ${IMP_DISPLAY_LIBRARY} ${IMP_SCORE_FUNCTOR_LIBRARY} ${IMP_CORE_LIBRARY} ${IMP_CONTAINER_LIBRARY} ${IMP_STATISTICS_LIBRARY} ${IMP_ATOM_LIBRARY}
    ${BOOST.FILESYSTEM_LIBRARIES} ${BOOST.PROGRAMOPTIONS_LIBRARIES} ${BOOST.SYSTEM_LIBRARIES} ${BOOST.GRAPH_LIBRARIES} ${GPERFTOOLS_LIBRARIES} ${TCMALLOC_HEAPPROFILER_LIBRARIES} ${TCMALLOC_HEAPCHECKER_LIBRARIES} ${LOG4CXX_LIBRARIES} ${CGAL_LIBRARIES} ${ANN_LIBRARIES} ${BOOST.REGEX_LIBRARIES})
   set_target_properties(em2d_single_score PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")


   add_executable("em3d_score" ${PROJECT_SOURCE_DIR}/applications/integrative_docking/em3d_dock/em3d_score.cpp ${PROJECT_SOURCE_DIR}/applications/integrative_docking/em3d_dock/lib/EMFit.cpp ${PROJECT_SOURCE_DIR}/applications/integrative_docking/em3d_dock/lib/MapScorer.cpp)
   target_link_libraries(em3d_score
    ${IMP_EM_LIBRARY} ${IMP_SAXS_LIBRARY} ${IMP_BASE_LIBRARY} ${IMP_CGAL_LIBRARY} ${IMP_ALGEBRA_LIBRARY} ${IMP_KERNEL_LIBRARY} ${IMP_DISPLAY_LIBRARY} ${IMP_SCORE_FUNCTOR_LIBRARY} ${IMP_CORE_LIBRARY} ${IMP_CONTAINER_LIBRARY} ${IMP_STATISTICS_LIBRARY} ${IMP_ATOM_LIBRARY}
    ${BOOST.FILESYSTEM_LIBRARIES} ${BOOST.PROGRAMOPTIONS_LIBRARIES} ${BOOST.SYSTEM_LIBRARIES} ${BOOST.GRAPH_LIBRARIES} ${GPERFTOOLS_LIBRARIES} ${TCMALLOC_HEAPPROFILER_LIBRARIES} ${TCMALLOC_HEAPCHECKER_LIBRARIES} ${LOG4CXX_LIBRARIES} ${CGAL_LIBRARIES} ${ANN_LIBRARIES} ${BOOST.REGEX_LIBRARIES})
   set_target_properties(em3d_score PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")


   add_executable("em3d_single_score" ${PROJECT_SOURCE_DIR}/applications/integrative_docking/em3d_dock/em3d_single_score.cpp ${PROJECT_SOURCE_DIR}/applications/integrative_docking/em3d_dock/lib/EMFit.cpp ${PROJECT_SOURCE_DIR}/applications/integrative_docking/em3d_dock/lib/MapScorer.cpp)
   target_link_libraries(em3d_single_score
    ${IMP_EM_LIBRARY} ${IMP_SAXS_LIBRARY} ${IMP_BASE_LIBRARY} ${IMP_CGAL_LIBRARY} ${IMP_ALGEBRA_LIBRARY} ${IMP_KERNEL_LIBRARY} ${IMP_DISPLAY_LIBRARY} ${IMP_SCORE_FUNCTOR_LIBRARY} ${IMP_CORE_LIBRARY} ${IMP_CONTAINER_LIBRARY} ${IMP_STATISTICS_LIBRARY} ${IMP_ATOM_LIBRARY}
    ${BOOST.FILESYSTEM_LIBRARIES} ${BOOST.PROGRAMOPTIONS_LIBRARIES} ${BOOST.SYSTEM_LIBRARIES} ${BOOST.GRAPH_LIBRARIES} ${GPERFTOOLS_LIBRARIES} ${TCMALLOC_HEAPPROFILER_LIBRARIES} ${TCMALLOC_HEAPCHECKER_LIBRARIES} ${LOG4CXX_LIBRARIES} ${CGAL_LIBRARIES} ${ANN_LIBRARIES} ${BOOST.REGEX_LIBRARIES})
   set_target_properties(em3d_single_score PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")


   add_executable("saxs_score" ${PROJECT_SOURCE_DIR}/applications/integrative_docking/foxsdock/saxs_score.cpp ${PROJECT_SOURCE_DIR}/applications/integrative_docking/foxsdock/lib/helpers.cpp)
   target_link_libraries(saxs_score
    ${IMP_EM_LIBRARY} ${IMP_SAXS_LIBRARY} ${IMP_BASE_LIBRARY} ${IMP_CGAL_LIBRARY} ${IMP_ALGEBRA_LIBRARY} ${IMP_KERNEL_LIBRARY} ${IMP_DISPLAY_LIBRARY} ${IMP_SCORE_FUNCTOR_LIBRARY} ${IMP_CORE_LIBRARY} ${IMP_CONTAINER_LIBRARY} ${IMP_STATISTICS_LIBRARY} ${IMP_ATOM_LIBRARY}
    ${BOOST.FILESYSTEM_LIBRARIES} ${BOOST.PROGRAMOPTIONS_LIBRARIES} ${BOOST.SYSTEM_LIBRARIES} ${BOOST.GRAPH_LIBRARIES} ${GPERFTOOLS_LIBRARIES} ${TCMALLOC_HEAPPROFILER_LIBRARIES} ${TCMALLOC_HEAPCHECKER_LIBRARIES} ${LOG4CXX_LIBRARIES} ${CGAL_LIBRARIES} ${ANN_LIBRARIES} ${BOOST.REGEX_LIBRARIES})
   set_target_properties(saxs_score PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")


   add_executable("interface_rtc" ${PROJECT_SOURCE_DIR}/applications/integrative_docking/nmr_rtc/interface_rtc.cpp ${PROJECT_SOURCE_DIR}/applications/integrative_docking/nmr_rtc/lib/helpers.cpp ${PROJECT_SOURCE_DIR}/applications/integrative_docking/nmr_rtc/lib/ResidueContent.cpp)
   target_link_libraries(interface_rtc
    ${IMP_EM_LIBRARY} ${IMP_SAXS_LIBRARY} ${IMP_BASE_LIBRARY} ${IMP_CGAL_LIBRARY} ${IMP_ALGEBRA_LIBRARY} ${IMP_KERNEL_LIBRARY} ${IMP_DISPLAY_LIBRARY} ${IMP_SCORE_FUNCTOR_LIBRARY} ${IMP_CORE_LIBRARY} ${IMP_CONTAINER_LIBRARY} ${IMP_STATISTICS_LIBRARY} ${IMP_ATOM_LIBRARY}
    ${BOOST.FILESYSTEM_LIBRARIES} ${BOOST.PROGRAMOPTIONS_LIBRARIES} ${BOOST.SYSTEM_LIBRARIES} ${BOOST.GRAPH_LIBRARIES} ${GPERFTOOLS_LIBRARIES} ${TCMALLOC_HEAPPROFILER_LIBRARIES} ${TCMALLOC_HEAPCHECKER_LIBRARIES} ${LOG4CXX_LIBRARIES} ${CGAL_LIBRARIES} ${ANN_LIBRARIES} ${BOOST.REGEX_LIBRARIES})
   set_target_properties(interface_rtc PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")


   add_executable("nmr_rtc_score" ${PROJECT_SOURCE_DIR}/applications/integrative_docking/nmr_rtc/nmr_rtc_score.cpp ${PROJECT_SOURCE_DIR}/applications/integrative_docking/nmr_rtc/lib/helpers.cpp ${PROJECT_SOURCE_DIR}/applications/integrative_docking/nmr_rtc/lib/ResidueContent.cpp)
   target_link_libraries(nmr_rtc_score
    ${IMP_EM_LIBRARY} ${IMP_SAXS_LIBRARY} ${IMP_BASE_LIBRARY} ${IMP_CGAL_LIBRARY} ${IMP_ALGEBRA_LIBRARY} ${IMP_KERNEL_LIBRARY} ${IMP_DISPLAY_LIBRARY} ${IMP_SCORE_FUNCTOR_LIBRARY} ${IMP_CORE_LIBRARY} ${IMP_CONTAINER_LIBRARY} ${IMP_STATISTICS_LIBRARY} ${IMP_ATOM_LIBRARY}
    ${BOOST.FILESYSTEM_LIBRARIES} ${BOOST.PROGRAMOPTIONS_LIBRARIES} ${BOOST.SYSTEM_LIBRARIES} ${BOOST.GRAPH_LIBRARIES} ${GPERFTOOLS_LIBRARIES} ${TCMALLOC_HEAPPROFILER_LIBRARIES} ${TCMALLOC_HEAPCHECKER_LIBRARIES} ${LOG4CXX_LIBRARIES} ${CGAL_LIBRARIES} ${ANN_LIBRARIES} ${BOOST.REGEX_LIBRARIES})
   set_target_properties(nmr_rtc_score PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")


foreach (test ${pytests})
   GET_FILENAME_COMPONENT(name ${test} NAME_WE)
  add_test(${name} ${PROJECT_BINARY_DIR}/imppy.sh "python" ${test})
  #add_dependencies(${name} RMFPython)
endforeach(test)


else()
message(STATUS "Application integrative_docking disabled")
endif()
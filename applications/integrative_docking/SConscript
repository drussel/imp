Import('env')

env= env.IMPApplication(name="integrative_docking", version='nightly-9/6/2012',
                        authors=["Dina Schneidman"],
                        brief="Integrative docking protocol""",

                        overview="""The protocol includes a number of tools:

\par saxs_score: Scoring with SAXS profile
Usage: <pdb1> <pdb2> <trans file> <exp profile file>

saxs_score program scores results of docking of two molecules against the SAXS profile file.

<pdb1> - The first molecule that was given to docking program and was kept in place during docking

<pdb2> - The second molecule that was given to docking program and was transformed

<trans file> - Docking output file with transformations that bring the transformed molecule to the static molecule.

       The format is as follows:

    1 -0.75020 0.67870 0.34160 82.62000 59.28000 -1.01100

    2 -0.42560 0.55540 0.33110 75.69000 67.15000 -0.30480

    3 -0.48910 0.66950 0.11820 84.94000 58.97000 3.34300

  The first number is the transformation number followed by three rotational and three translational parameters.

<exp profile file> - The SAXS profile of the complex. see http://modbase.compbio.ucsf.edu/foxs/help.html for format details.


\par em2d_dock: Scoring with EM 2D class averages
Usage: <pdb1> <pdb2> <trans file> <image1> <image2>...

<pdb1> <pdb2> <trans_file> as above

<image1> <image2>... - complex 2D class averages in PGM format (P2)


\par em3d_dock: Scoring with EM 3D density map

Usage: <pdb1> <pdb2> <trans file> <em map>

<pdb1> <pdb2> <trans_file> as above

<em_map> - density map of the complex in mrc format


\par nmr_rtc: Scoring with NMR residue type content term (NMR-RTC)
Usage: <pdb1> <pdb2> <trans file> <residue content file1> <residue content file2>

<pdb1> <pdb2> <trans_file> as above

<residue content file1> - residue content file for pdb1 or '-' if none

<residue content file2> - residue content file for pdb2 or '-' if none

The format of the file is as follows:

MET 0

ARG 0

HIS 2

This would correspond to having 0 methionine, 0 arginine and two histidine residues in the interface.


\par combine_scores: Combine scores for different data types
Usage: combine_scores <file1> <weight1> <file2> <weight2> <file3> <weight3>...

combines files with same docking transformations in the following format:

# | score | filtered (+/-) | z-score | ... | Transformation

The programs for scoring of docking transformations (saxs_score, em2d_score, em3d_score, nmr_rtc_score) output results in this format.

Only filtered values of + are combined. The output score is the weighted sum of Z-Scores""",

                        license=env.IMPStandardLicense(),
                        publications=['Schneidman-Duhovny D, Hammel M, Sali A. Macromolecular docking restrained by a small angle X-ray scattering profile. J Struct Biol. 2010', 'Schneidman-Duhovny et al. A method for integrative structure determination of protein-protein complexes: application to a therapeutical antibody-antigen comlex. submitted'],
                        required_modules=['em','saxs'],
                        required_dependencies=['Boost.ProgramOptions'],
                        python=False)

if env:
    env.IMPCPPExecutable(target="combine_scores",
                         source=["combine_scores/combine_scores.cpp"])
    env.IMPCPPExecutables([("em2d_score", ["em2d_dock/Projection.cpp",
                                           "em2d_dock/em2d_score.cpp"]),
                           ("em2d_single_score",
                               ["em2d_dock/Projection.cpp",
                                "em2d_dock/em2d_single_score.cpp"])])
    env.IMPCPPExecutables([("em3d_score",
                            ["em3d_dock/MapDistanceTransform.cpp",
                             "em3d_dock/EnvelopeScore.cpp",
                             "em3d_dock/PCAAligner.cpp", "em3d_dock/EMFit.cpp",
                             "em3d_dock/MapScorer.cpp",
                             "em3d_dock/em3d_score.cpp"]),
                           ("em3d_single_score",
                            ["em3d_dock/MapDistanceTransform.cpp",
                             "em3d_dock/EnvelopeScore.cpp",
                             "em3d_dock/PCAAligner.cpp", "em3d_dock/EMFit.cpp",
                             "em3d_dock/MapScorer.cpp",
                             "em3d_dock/em3d_single_score.cpp"])])
    env.IMPCPPExecutable(target="saxs_score",
                         source=["foxsdock/saxs_score.cpp",
                                 "foxsdock/helpers.cpp"])
    env.IMPCPPExecutables([("nmr_rtc_score", ["nmr_rtc/ResidueContent.cpp",
                                             "nmr_rtc/nmr_rtc_score.cpp",
                                             "nmr_rtc/helpers.cpp"]),
                           ("interface_rtc", ["nmr_rtc/ResidueContent.cpp",
                                              "nmr_rtc/interface_rtc.cpp",
                                              "nmr_rtc/helpers.cpp"])])

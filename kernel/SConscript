Import('env')

config=[]
if len(env['CGAL_LIBS'])>0:
    config.append('IMP_USE_CGAL')
else:
    config.append('IMP_NO_CGAL')

if len(env['NETCDF_LIBS'])>0:
    config.append('IMP_USE_NETCDF')
else:
    config.append('IMP_NO_NETCDF')

if len(env['ANN_LIBS'])>0:
    config.append('IMP_USE_ANN')
else:
    config.append('IMP_NO_ANN')

if len(env['BOOST_FILESYSTEM_LIBS']) > 0:
    config.append('IMP_USE_BOOST_FILESYSTEM')
else:
    config.append('IMP_NO_BOOST_FILESYSTEM')

if len(env['BOOST_PROGRAM_OPTIONS_LIBS']) > 0:
    config.append('IMP_USE_BOOST_PROGRAM_OPTIONS')
else:
    config.append('IMP_NO_BOOST_PROGRAM_OPTIONS')

if not env.get('deprecated', True):
    config.append('IMP_NO_DEPRECATED')
else:
    config.append('IMP_USE_DEPRECATED')
if env['IMP_ENDIAN']=='little':
    config.append("IMP_LITTLE_ENDIAN")
else:
    config.append('IMP_BIG_ENDIAN')

if env.get("BOOST_VERSION", None):
    config.append(["IMP_BOOST_VERSION", env["BOOST_VERSION"]])
config.append(["IMP_DEBUG", "0"])
config.append(["IMP_RELEASE", "1"])
config.append(["IMP_FAST", "2"])

if env['build'] == 'fast':
    config.append(["IMP_BUILD", "IMP_FAST"])
elif env['build'] == 'release':
    config.append(["IMP_BUILD", "IMP_RELEASE"])
elif env['build'] == 'debug':
    config.append(["IMP_BUILD", "IMP_DEBUG"])


env.IMPModuleBuild(version='SVN', required_modules=None, config_macros=config,
                   module='kernel', module_suffix="", module_include_path="IMP",
                   module_src_path="kernel", module_preproc="IMP",
                   module_namespace="IMP",
                   optional_dependencies=['boost_file_system', 'netcdf'])

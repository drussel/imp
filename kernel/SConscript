Import('env')
import scons_tools.dependency
import scons_tools.dependency.boost

config=[]

scons_tools.dependency.boost.configure_tr1_check(env)
deplist=[]

scons_tools.dependency.boost.add_boost_library(env, "FileSystem", "filesystem",
                                               'boost/filesystem/path.hpp',
                                               body="boost::filesystem::path p;",
                                               extra_boost_libs=["system"])
deplist.append('Boost.FileSystem')

if not env.GetOption('help'):
    if not env.get('deprecated', True):
        config.append('IMP_NO_DEPRECATED')
    else:
        config.append('IMP_USE_DEPRECATED')
    if env['IMP_ENDIAN']=='little':
        config.append("IMP_LITTLE_ENDIAN")
    else:
        config.append('IMP_BIG_ENDIAN')

    if env.get("BOOST_VERSION", None):
        config.append(["IMP_BOOST_VERSION", env["BOOST_VERSION"]])
    if env.get("IMP_COMPILER_NULLPTR"):
        config.append(["IMP_DEFINE_NULLPTR", 0])
    else:
        config.append(["IMP_DEFINE_NULLPTR", 1])
    config.append(["IMP_DEBUG", "0"])
    config.append(["IMP_RELEASE", "1"])
    config.append(["IMP_FAST", "2"])

    if env.get("IMP_HAS_BOOST_TR1_BUG", None):
        config.append(["IMP_HAS_BOOST_TR1_BUG", "1"])

    if env['build'] == 'fast':
        config.append(["IMP_BUILD", "IMP_FAST"])
    elif env['build'] == 'release':
        config.append(["IMP_BUILD", "IMP_RELEASE"])
    elif env['build'] == 'debug':
        config.append(["IMP_BUILD", "IMP_DEBUG"])


env.IMPModuleBuild(version='SVN', config_macros=config,
                   module='kernel', module_suffix="", module_include_path="IMP",
                   module_preproc="IMP",
                   module_namespace="IMP",
                   required_dependencies=['Boost'],
                   optional_dependencies=deplist)

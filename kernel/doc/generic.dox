/** \defgroup genericgeometry Generic Geometry
    Geometry in IMP can be stored in a variety of ways. For example, a point
    in 3D can be stored using an IMP::algebra::Vector3D or using an
    IMP::core::XYZ particle. It is often useful to be able to write algorithms
    that work on sets of points without worring how they are stored, the
    Generic Geometry layer provides that. It works using a set of functions
    IMP::core::get_geometry() and IMP::core::set_geometry() which manipulate
    the IMP::algebra representation
    of the geometry in question (so an IMP::algebra::Vector3D for both
    IMP::algebra::Vector3D and IMP::core::XYZ storage). Algorithms take their
    arguments as C++ templates and use the generic geometry methods to
    manipulate the geometry. And versions of the function for both types
    of storage are exported to python.

    For example, IMP::atom::rmsd() takes any combination of IMP::algebra::Vector3Ds
    or IMP::core::XYZs or IMP::core::XYZsTemp as arguments. Versions for all combinations
    of those are exported to python.
*/
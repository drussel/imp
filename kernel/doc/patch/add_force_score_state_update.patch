Index: kernel/src/ScoreState.cpp
===================================================================
--- kernel/src/ScoreState.cpp	(revision 1043)
+++ kernel/src/ScoreState.cpp	(working copy)
@@ -5,8 +5,8 @@
  *
  */
 
+#include "IMP/ScoreState.h"
 #include "IMP/log.h"
-#include "IMP/ScoreState.h"
 
 #include <cmath>
 #include <limits>
@@ -30,14 +30,24 @@
 }
 
 
-  void ScoreState::after_evaluate(unsigned int iter,
-                                  DerivativeAccumulator *da) {
+void ScoreState::after_evaluate(unsigned int iter,
+                                DerivativeAccumulator *da) {
   if (after_iteration_ != iter) {
     after_iteration_= iter;
     do_after_evaluate(da);
   }
 }
 
+
+void ScoreState::before_evaluate() {
+  do_before_evaluate();
+}
+
+
+void ScoreState::after_evaluate(DerivativeAccumulator *da) {
+  do_after_evaluate(da);
+}
+
 //! Destructor
 ScoreState::~ScoreState()
 {
Index: kernel/include/ScoreState.h
===================================================================
--- kernel/include/ScoreState.h	(revision 1043)
+++ kernel/include/ScoreState.h	(working copy)
@@ -57,6 +57,8 @@
       count has not yet been seen.
    */
   void before_evaluate(unsigned int iteration);
+  //! Force update of the structure.
+  void before_evaluate();
 
   //! Do post evaluation work if needed
   /** The protected do_after_evaluate method will be called if needed.
@@ -64,7 +66,10 @@
   void after_evaluate(unsigned int iteration,
                       DerivativeAccumulator *accpt);
 
+  //! Force update of the structure
+  void after_evaluate(DerivativeAccumulator *accpt);
 
+
   //! Show the ScoreState
   /** The output of show may take several lines and should end in a newline.
    */

Index: kernel/src/Particle.cpp
===================================================================
--- kernel/src/Particle.cpp	(revision 1081)
+++ kernel/src/Particle.cpp	(working copy)
@@ -11,6 +11,13 @@
 
 IMP_BEGIN_NAMESPACE
 
+Particle::Particle(Model *m)
+{
+  is_active_ = true;
+  m->add_particle(this);
+}
+
+
 Particle::Particle()
 {
   is_active_ = true;
Index: kernel/include/Particle.h
===================================================================
--- kernel/include/Particle.h	(revision 1081)
+++ kernel/include/Particle.h	(working copy)
@@ -96,8 +96,9 @@
 
 public:
 
-
-
+  //! Construct a particle and add it to the Model
+  Particle(Model *m);
+  
   Particle();
   ~Particle();
 
Index: kernel/test/particles/test_refcount.py
===================================================================
--- kernel/test/particles/test_refcount.py	(revision 1081)
+++ kernel/test/particles/test_refcount.py	(working copy)
@@ -34,8 +34,7 @@
         self._check_number(0)
 
         m= IMP.Model()
-        p= IMP.Particle()
-        m.add_particle(p)
+        p= IMP.Particle(m)
         self._check_number(1)
 
         p=1
@@ -47,8 +46,8 @@
         """Check that ref counting works with removing particles"""
         self._check_number(0)
         m= IMP.Model()
-        p= IMP.Particle()
-        pi= m.add_particle(p)
+        p= IMP.Particle(m)
+        pi= p.get_index()
         self._check_number(1)
         m.remove_particle(pi)
         self._check_number(1)
@@ -86,10 +85,10 @@
         self._check_number(0)
         m= IMP.Model()
         print 7
-        p= IMP.Particle()
+        p= IMP.Particle(m)
         print p
         print 8
-        pi= m.add_particle(p)
+        pi= p.get_index()
         print 9
         p=None
         self._check_number(1)
@@ -141,8 +140,8 @@
         """Check that removed particles are skipped"""
         print "skipped"
         m= IMP.Model()
-        p= IMP.Particle()
-        pi= m.add_particle(p)
+        p= IMP.Particle(m)
+        pi= p.get_index()
         ps= m.get_particles()
         self.assertEqual(len(ps), 1, "Should only be 1 particle")
         m.remove_particle(pi)
Index: kernel/pyext/IMP/test.py
===================================================================
--- kernel/pyext/IMP/test.py	(revision 1081)
+++ kernel/pyext/IMP/test.py	(working copy)
@@ -34,8 +34,7 @@
     def create_point_particle(self, model, x, y, z):
         """Make a particle with optimizable x, y and z attributes, and
            add it to the model."""
-        p = IMP.Particle()
-        model.add_particle(p)
+        p = IMP.Particle(model)
         p.add_attribute(IMP.FloatKey("x"), x, True)
         p.add_attribute(IMP.FloatKey("y"), y, True)
         p.add_attribute(IMP.FloatKey("z"), z, True)

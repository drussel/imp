Import('env')

files = ['base_types.h', 'random.h', 'Index.h', 'Model.h',
         'Particle.h', 'ScoreState.h', 'OptimizerState.h', 'config.h',
         'log.h', 'DerivativeAccumulator.h',
         'Key.h', 'utility.h', 'Restraint.h', 'Optimizer.h',
         'DecoratorBase.h', 'Vector3D.h', 'VectorD.h',
         'UnaryFunction.h', 'PairScore.h', 'SingletonScore.h', 'macros.h',
         'TripletScore.h', 'exception.h', 'VersionInfo.h',
         'Object.h', 'Pointer.h', 'RefCountedObject.h', 'ParticleRefiner.h',
         'container_macros.h']

# Subdirectories
files = [File(f) for f in files] \
        + SConscript('internal/SConscript')

# Install the include files:
includedir = env['includedir']
inst = env.InstallHierarchy(includedir, 'IMP',
                            'IMP, an Integrative Modeling Platform.', files)
env.Alias('kernel-install', inst)
env.Alias('install', inst)

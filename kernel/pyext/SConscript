import os.path

Import('env', 'get_pyext_environment')

# Get a modified build environment suitable for building Python extensions:
e = get_pyext_environment(env, 'IMP', cplusplus=True)
e.Append(CPPPATH=['#/build/include', e['BOOST_CPPPATH']])
e.Append(LIBPATH=['#/build/lib'], LIBS='imp')

# Build the Python extension from SWIG interface file:
pyext = e.LoadableModule('#/build/lib/_IMP', 'IMP.i',
                         SWIGPATH='#/build/include',
                         SWIGFLAGS='-python -c++ -naturalvar')
# .py file should also be generated:
gen_pymod = File('IMP.py')
e.Depends(gen_pymod, pyext)
# Place in lib directory:
pymod = e.LinkInstallAs('#/build/lib/IMP/__init__.py', gen_pymod)
# Install
pydir = os.path.join(env['pythondir'], 'IMP')
pyinst = env.Install(pydir, pymod)
env.Alias('install', pyinst)
env.Alias('kernel-install', pyinst)

# Install the Python extension:
libinst = e.Install(e['pyextdir'], pyext)
e.Alias('install', libinst)
e.Alias('kernel-install', libinst)

# Subdirectories
pyfiles = SConscript('IMP/SConscript')

Return('pyext', 'pymod', 'pyfiles')

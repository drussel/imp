from tools import emlib

Import('env', 'get_sharedlib_environment', 'invalidate_environment')

# Get custom environment for building against EMLIB:
emenv = env.Clone()
emlib.configure_check(emenv)
Export('emenv')

# Make sure that all builds with this environment fail if EMLIB was not found:
if emenv['EM_LIBS'] == '':
    invalidate_environment(emenv, emlib.fail)

# Get an environment suitable for building a shared library:
e = get_sharedlib_environment(emenv, 'IMP_EXPORTS', cplusplus=True)

e.Append(CPPPATH=['#/include', e['EM_CPPPATH']])
e.Append(LIBPATH=['../src', e['EM_LIBPATH']], LIBS=['imp', e['EM_LIBS']])

files = ('IMPParticlesAccessPoint.cpp', 'EMFitRestraint.cpp')

# Build the shared library:
lib = e.SharedLibrary('impem', files)

# Install the library:
libinst = e.Install(e['libdir'], lib)
e.Alias('impEM-install', [libinst])

# Subdirectories:
SConscript('pyext/SConscript')
test = SConscript('test/SConscript')
e.Depends(test, lib)

Return('lib')

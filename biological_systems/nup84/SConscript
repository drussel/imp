Import('env')
import scons_tools.examples

env= env.IMPSystem(version="SVN",
                   authors=["Jeremy Phillips"],
                   brief="Compute a structure for the Nup84 complex.",
                   overview="""The nuclear pore complex (NPC) is a multiprotein assembly that serves as the sole mediator
of nucleocytoplasmic exchange in eukaryotic cells. Here, we use an integrative approach to determine
the structure of an essential component of the yeast NPC, the ~600 kDa heptameric Nup84 complex. The configuration of the subunit structures was determined by satisfaction of
spatial restraints derived from a diverse set of negative stain EM and protein domain mapping data.
Phenotypic data was mapped onto the complex, allowing us to find regions that stabilize the NPC's
interaction with the NE membrane and connect the complex to the rest of the NPC. We suggest a
scenario for the evolution of the Nup84 complex through a series of gene duplication and loss events.
This work demonstrates that integrative approaches based on low resolution data can generate
functionally informative structures at intermediate resolution.""",
                   license=env.IMPStandardLicense(),
                   # jeremy, update the publication(s)
                   #publications=[env.IMPPublication(authors=["Keren Lasker", "Javier A. Velazquez-Muriel",
                   #                                          "Benjamin M. Webb", "Zheng Yang",
                   #                                          "Thomas E. Ferrin", "Andrej Sali"],
                   #                                 title="Macromolecular assembly structures by comparative modeling and electron microscopy",
                   #                                 journal="Methods in Molecular Biology",
                   #                                 year=2011)],
                   required_modules=['core', 'atom', 'em2d', 'em', 'multifit2', 'gamb'],
                   last_imp_version="""None""",
                   # this is true if the scripts can be run incompletely as test cases
                   # eg if it works to do "sample_0.py 1 1000" and then "analyze_0.py"
                   # without doing all of the sampling required. This can be implementedf
                   # either by providing intermediate data or by only analyzing the data
                   # that happens to be there
                   testable=False, parallelizable=False)
#if env:
#    files= ["setup",
#            "sample_0",
#            "analyze_0"]
#    scons_tools.examples.add_python_example(env, "setup.py",
#                                            "General setup code common to sampling and analysis.")
#    scons_tools.examples.add_python_example(env, "sample_0.py",
#                                            "Sampling using MCCG and random starting points.")
#    scons_tools.examples.add_python_example(env, "analyze_0.py",
#                                            "Cluster into 10 solutions.")
#    scons_tools.examples.add_page(env, "Example system code",
#                                  [x+".py" for x in files])

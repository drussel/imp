# Autogenerated file, run build/tools/setup_cmake.py to regenerate

if (${IMP_USE_CUSTOM_CXX_FLAGS})
set(CMAKE_CXX_FLAGS ${IMP_PYTHON_CXX_FLAGS})
endif()

include_directories(${IMP_PYTHON_INCLUDE_PATH})
add_definitions(-DIMP_SWIG_WRAPPER)

include_directories(${BOOST.FILESYSTEM_INCLUDE_PATH} ${BOOST.GRAPH_INCLUDE_PATH} ${BOOST.PROGRAMOPTIONS_INCLUDE_PATH} ${BOOST.SYSTEM_INCLUDE_PATH} ${GPERFTOOLS_INCLUDE_PATH} ${LOG4CXX_INCLUDE_PATH} ${TCMALLOC_HEAPCHECKER_INCLUDE_PATH} ${TCMALLOC_HEAPPROFILER_INCLUDE_PATH})
link_directories(${BOOST.FILESYSTEM_LINK_PATH} ${BOOST.GRAPH_LINK_PATH} ${BOOST.PROGRAMOPTIONS_LINK_PATH} ${BOOST.SYSTEM_LINK_PATH} ${GPERFTOOLS_LINK_PATH} ${LOG4CXX_LINK_PATH} ${TCMALLOC_HEAPCHECKER_LINK_PATH} ${TCMALLOC_HEAPPROFILER_LINK_PATH})

GET_DIRECTORY_PROPERTY(includes INCLUDE_DIRECTORIES)
foreach(include ${includes})
set(include_path ${include_path}:${include})
endforeach(include)

set(swig_path ${IMP_SWIG_PATH})

#message(STATUS RMF_SWIG_PATH = ${RMF_SWIG_PATH})
#message(STATUS ${BOOST.FILESYSTEM_SWIG_PATH} ${BOOST.GRAPH_SWIG_PATH} ${BOOST.PROGRAMOPTIONS_SWIG_PATH} ${BOOST.SYSTEM_SWIG_PATH} ${GPERFTOOLS_SWIG_PATH} ${LOG4CXX_SWIG_PATH} ${TCMALLOC_HEAPCHECKER_SWIG_PATH} ${TCMALLOC_HEAPPROFILER_SWIG_PATH})
# this is needed for some reason that I don't understand
set(swigpath ${BOOST.FILESYSTEM_SWIG_PATH} ${BOOST.GRAPH_SWIG_PATH} ${BOOST.PROGRAMOPTIONS_SWIG_PATH} ${BOOST.SYSTEM_SWIG_PATH} ${GPERFTOOLS_SWIG_PATH} ${LOG4CXX_SWIG_PATH} ${TCMALLOC_HEAPCHECKER_SWIG_PATH} ${TCMALLOC_HEAPPROFILER_SWIG_PATH})
#message(STATUS ${swigpath})
foreach(swig ${swigpath})
set(swig_path ${swig}:${swig_path})
endforeach(swig)

execute_process(COMMAND ${PROJECT_SOURCE_DIR}/tools/build/make_swig_deps.py
                    "--swig=${SWIG_EXECUTABLE}"
                    "--includepath=${include_path}"
                    "--swigpath=${swig_path}"
                    "--name=benchmark"
                    RESULT_VARIABLE swigdeps
                    WORKING_DIRECTORY ${PROJECT_BINARY_DIR})
if( ${swigdeps})
message(FATAL_ERROR " Failed to run swig dependency computation")
endif()

file(STRINGS "${PROJECT_BINARY_DIR}/src/benchmark_swig.deps" SWIGDEPS)

set(source ${PROJECT_BINARY_DIR}/src/benchmark_swig/wrap.cpp
                          ${PROJECT_BINARY_DIR}/src/benchmark_swig/wrap.h)

add_custom_command(OUTPUT ${source}
                          "${PROJECT_BINARY_DIR}/lib/IMP/benchmark/__init__.py"
   COMMAND "${PROJECT_SOURCE_DIR}/tools/build/make_swig_wrapper.py"
            "--swig=${SWIG_EXECUTABLE}"
            "--swigpath=${swig_path}"
            "--includepath=${include_path}"
            "--module=benchmark"
   DEPENDS ${SWIGDEPS}
   WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
   COMMENT "Running swig on benchmark")

add_custom_target("benchmark_wrapper" ALL DEPENDS ${source}
)

add_library(_IMP_benchmark MODULE ${source})

set_target_properties(_IMP_benchmark PROPERTIES PREFIX "")

if(WIN32 AND NOT CYGWIN)
  set_target_properties(_IMP_benchmark PROPERTIES SUFFIX ".pyd")
endif()

target_link_libraries(_IMP_benchmark
    imp_benchmark
    ${IMP_BASE_LIBRARY}
    ${BOOST.FILESYSTEM_LIBRARIES} ${BOOST.PROGRAMOPTIONS_LIBRARIES} ${BOOST.SYSTEM_LIBRARIES} ${BOOST.GRAPH_LIBRARIES} ${GPERFTOOLS_LIBRARIES} ${TCMALLOC_HEAPPROFILER_LIBRARIES} ${TCMALLOC_HEAPCHECKER_LIBRARIES} ${LOG4CXX_LIBRARIES}
    ${SWIG_PYTHON_LIBRARIES}
  )
//IMP_SWIG_BASE_OBJECT(IMP::domino, DiscreteSampler, DiscreteSamplers);
//IMP_SWIG_BASE_OBJECT(IMP::domino, DiscreteSet, DiscreteSets);
//IMP_SWIG_BASE_OBJECT(IMP::domino, RestraintEvaluatorI, RestraintEvaluatorIs);
IMP_SWIG_OBJECT(IMP::domino, DominoOptimizer, DominoOptimizers);
IMP_SWIG_OBJECT(IMP::domino, SimpleDiscreteRestraint, SimpleDiscreteRestraints);

/* Wrap our own classes */
%include "IMP/domino/CombState.h"
%include "IMP/domino/DiscreteSet.h"
%include "IMP/domino/Transformation.h"
%include "IMP/domino/TransformationUtils.h"
%include "IMP/domino/JunctionTree.h"
%include "IMP/domino/DiscreteSampler.h"
%include "IMP/domino/RestraintEvaluatorI.h"
%include "IMP/domino/RestraintEvaluator.h"
%include "IMP/domino/RestraintEvaluatorFromFile.h"
%include "IMP/domino/JNode.h"
%include "IMP/domino/RestraintGraph.h"
%include "IMP/domino/DominoOptimizer.h"
%include "IMP/domino/PermutationSampler.h"
%include "IMP/domino/MappedDiscreteSet.h"
%include "IMP/domino/CartesianProductSampler.h"
%include "IMP/domino/SimpleDiscreteSpace.h"
%include "IMP/domino/SimpleDiscreteRestraint.h"
%include "IMP/domino/SimpleDiscreteSampler.h"
%include "IMP/domino/TransformationMappedDiscreteSet.h"
%include "IMP/domino/TransformationCartesianProductSampler.h"
%include "IMP/domino/TransformationPermutationSampler.h"
%include "IMP/domino/TransformationDiscreteSet.h"
%include "IMP/domino/TransformationUtils.h"
%include "IMP/domino/SymmetrySampler.h"

namespace IMP {
  namespace domino {
    %template(CombStates) ::std::vector<CombState*>;
  }
}

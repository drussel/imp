/**
 *  \file ListQuadContainer.cpp   \brief A list of ParticleQuadsTemp.
 *
 *  This file is generated by a script (internal/tools/make-container).
 *  Do not edit directly.
 *
 *  Copyright 2007-2012 IMP Inventors. All rights reserved.
 *
 */

#include "IMP/internal/InternalListQuadContainer.h"
#include "IMP/QuadModifier.h"
#include <IMP/base/check_macros.h>
#include <algorithm>


IMP_BEGIN_INTERNAL_NAMESPACE


IMP_ACTIVE_CONTAINER_DEF(InternalListQuadContainer,);


InternalListQuadContainer
::InternalListQuadContainer(Model *m, std::string name):
  internal::ListLikeQuadContainer(m, name){
  initialize_active_container(m);
}


InternalListQuadContainer
::InternalListQuadContainer(Model *m, const char *name):
  internal::ListLikeQuadContainer(m, name){
  initialize_active_container(m);
}


void InternalListQuadContainer::do_show(std::ostream &out) const {
  IMP_CHECK_OBJECT(this);
  out << get_number_of_particle_quads()
      << " Quads." << std::endl;
}



void InternalListQuadContainer
::remove_particle_quads(const ParticleQuadsTemp &c) {
  if (c.empty()) return;
  ParticleIndexQuads cp= IMP::internal::get_index(c);
  remove_from_list(cp);
  IMP_IF_CHECK(base::USAGE) {
    for (unsigned int i=0; i< c.size(); ++i) {
      IMP_USAGE_CHECK(IMP::internal::is_valid(c[i]),
                    "Passed Quad cannot be nullptr (or None)");
    }
  }
}

ParticleIndexQuads
InternalListQuadContainer::get_all_possible_indexes() const {
    return get_indexes();
  }

void InternalListQuadContainer::do_before_evaluate() {
  internal::ListLikeQuadContainer::do_before_evaluate();
}

void InternalListQuadContainer::do_after_evaluate() {
  internal::ListLikeQuadContainer::do_after_evaluate();
}

ParticlesTemp
InternalListQuadContainer::get_state_input_particles() const {
  return ParticlesTemp();
}

ContainersTemp
InternalListQuadContainer::get_state_input_containers() const {
  return ContainersTemp();
}

IMP_END_INTERNAL_NAMESPACE

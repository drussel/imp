# Autogenerated file, run tools/build/setup_cmake.py to regenerate

if(NOT DEFINED ANN_LIBRARIES)

set(CHECK_COMPILES_BODY "")

check_compiles("_environment" ANN ANN "#include <ANN/ANN.h>" "" "ANN" ANN_ok)
if("${ANN_ok}" MATCHES "1")
message(STATUS "Found ANN in environment")
else()
include(LibFindMacros)

# Use pkg-config to get hints about paths
libfind_pkg_check_modules("ANN_PKGCONF" "ann")

# Include dir
find_path("ANN_INCLUDE_DIR"
  NAMES ANN/ANN.h
  PATHS ${ANN_PKGCONF_INCLUDE_DIRS}
)

# Finally the library itself
foreach(lib ANN)
find_library("${lib}_LIBRARY"
  NAMES ${lib}
  PATHS ${ANN_PKGCONF_LIBRARY_DIRS}
)
set("ANN_LIBRARY" ${ANN_LIBRARY} ${${lib}_LIBRARY})
endforeach(lib)


# Set the include dir variables and the libraries and let libfind_process do the rest.
# NOTE: Singular variables for this library, plural for libraries this this lib depends on.
set(ANN_PROCESS_INCLUDES ANN_INCLUDE_DIR)
set(ANN_PROCESS_LIBS ANN_LIBRARY)
libfind_process(ANN)

if ("${ANN_LIBRARY}" MATCHES ".*NOTFOUND.*"
    OR "${ANN_INCLUDE_DIR}" MATCHES ".*NOTFOUND.*")
  message("ANN not found")
file(WRITE "${PROJECT_BINARY_DIR}/data/build_info/ANN" "ok=False")
else()
  check_compiles("_found" "ANN" "ANN" "#include <ANN/ANN.h>" "${ANN_INCLUDE_DIR}" "${ANN_LIBRARY}" ANN_ok_ok)
  if(${ANN_ok_ok} MATCHES "1")
    message(STATUS "Found ANN at ""${ANN_INCLUDE_DIR}" " " "${ANN_LIBRARY}")
  else()
    message("ANN not found")
file(WRITE "${PROJECT_BINARY_DIR}/data/build_info/ANN" "ok=False")
  endif()
endif()
endif()
else()
message(STATUS "ANN already setup")

endif(NOT DEFINED ANN_LIBRARIES)
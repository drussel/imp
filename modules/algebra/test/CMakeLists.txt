# Autogenerated file, run tools/build/setup_cmake.py to regenerate

include_directories(${ANN_INCLUDE_PATH}
        ${BOOST.FILESYSTEM_INCLUDE_PATH}
        ${BOOST.GRAPH_INCLUDE_PATH}
        ${BOOST.PROGRAMOPTIONS_INCLUDE_PATH}
        ${BOOST.SYSTEM_INCLUDE_PATH}
        ${CGAL_INCLUDE_PATH}
        ${GPERFTOOLS_INCLUDE_PATH}
        ${LOG4CXX_INCLUDE_PATH}
        ${TCMALLOC_HEAPCHECKER_INCLUDE_PATH}
        ${TCMALLOC_HEAPPROFILER_INCLUDE_PATH})
link_directories(${ANN_LINK_PATH}
        ${BOOST.FILESYSTEM_LINK_PATH}
        ${BOOST.GRAPH_LINK_PATH}
        ${BOOST.PROGRAMOPTIONS_LINK_PATH}
        ${BOOST.SYSTEM_LINK_PATH}
        ${CGAL_LINK_PATH}
        ${GPERFTOOLS_LINK_PATH}
        ${LOG4CXX_LINK_PATH}
        ${TCMALLOC_HEAPCHECKER_LINK_PATH}
        ${TCMALLOC_HEAPPROFILER_LINK_PATH})

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${ALGEBRA_CXX_FLAGS}")


File(GLOB runtimepytests "${PROJECT_BINARY_DIR}/test/algebra/test_*.py")
set(pytests ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_bounding_box.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_cone.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_cylinder.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_dynamic_nn.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_eigen_analysis.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_geom_alignment.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_grid.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_inverse.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_log_grid.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_nearest_neighbor.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_random_ball.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_random_chain.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_random_rotations.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_regression_fit.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_rigid_transformation.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_rotation.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_shortest_segment.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_sphere.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_sphere_cover.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_sphere_patch.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_spherical_coords.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_transformation.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_triangle3d.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_uniform_rotation.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_vector3d.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_vector4d.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_vector_on_box.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_vectorkd.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_vol.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_xyz.py ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_zyz.py )

foreach (test ${runtimepyttests} ${pytests})
   GET_FILENAME_COMPONENT(name ${test} NAME_WE)
  add_test("${name}_algebra" ${PROJECT_BINARY_DIR}/imppy.sh "python" ${test})
  set_tests_properties("${name}_algebra" PROPERTIES LABELS algebra)
endforeach(test)

set(cpp_tests ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_grid.cpp ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_grid_apply.cpp ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_grid_storage.cpp ${PROJECT_SOURCE_DIR}/modules/algebra/test/test_piecewise_linear.cpp )

foreach (test ${cpp_tests})
   GET_FILENAME_COMPONENT(name ${test} NAME_WE)
   add_executable("${name}_algebra" ${test})
   target_link_libraries("${name}_algebra"     imp_algebra
    ${IMP_BASE_LIBRARY} ${IMP_CGAL_LIBRARY}
    ${ANN_LIBRARIES} ${BOOST.FILESYSTEM_LIBRARIES} ${BOOST.PROGRAMOPTIONS_LIBRARIES} ${BOOST.SYSTEM_LIBRARIES} ${BOOST.GRAPH_LIBRARIES} ${GPERFTOOLS_LIBRARIES} ${TCMALLOC_HEAPPROFILER_LIBRARIES} ${TCMALLOC_HEAPCHECKER_LIBRARIES} ${LOG4CXX_LIBRARIES} ${CGAL_LIBRARIES})
   set_target_properties("${name}_algebra" PROPERTIES
                         RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/test/algebra/")
   add_test("${name}_algebra" ${PROJECT_BINARY_DIR}/imppy.sh
            "${PROJECT_BINARY_DIR}/test/algebra/${name}_algebra")
   set_tests_properties("${name}_algebra" PROPERTIES LABELS algebra)
   set(executables ${executables} "${name}_algebra")
endforeach(test)

add_custom_target("imp_algebra_tests" ALL DEPENDS ${executables})
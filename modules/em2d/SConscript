Import("env")
import scons_tools.dependency

scons_tools.dependency.add_external_library(env, "FFTW3", ["fftw3"],
                                            "fftw3.h")

scons_tools.dependency.boost.add_boost_library(env, "ProgramOptions", "program_options", 'boost/program_options.hpp',
                                               extra_boost_libs=["system"])
scons_tools.dependency.boost.add_boost_library(env, "FileSystem", "filesystem", 'boost/filesystem/path.hpp',
                                               body="boost::filesystem::path p;",
                                               extra_boost_libs=["system"])

scons_tools.dependency.add_external_library(env, "OpenCV21",
                                            ["cv","cxcore","highgui"],
                                            ["opencv/cv.h", "opencv/cvver.h",
                                             "boost/static_assert.hpp"],
                                            """BOOST_STATIC_ASSERT( CV_MAJOR_VERSION<=2 && CV_MINOR_VERSION<=1); new cv::Mat();""",
                                            extra_libs=[])


scons_tools.dependency.add_external_library(env, "OpenCV22",
                                            ["opencv_core","opencv_imgproc","opencv_highgui"],
                                            ["opencv2/core/core.hpp",
                                             "opencv2/imgproc/imgproc.hpp",
                                             "opencv2/highgui/highgui.hpp",
                                             "opencv2/core/version.hpp", "boost/static_assert.hpp"],
                  """new cv::Mat(); BOOST_STATIC_ASSERT(CV_MAJOR_VERSION>=2 && CV_MINOR_VERSION>=1);""",
                  extra_libs=[],
                                            versionheader="opencv2/core/version.hpp",
                                            versioncpp=["CV_MAJOR_VERSION",
                                                        "CV_MINOR_VERSION",
                                                        "CV_SUBMINOR_VERSION"])

config = []
if not env.GetOption('help'):
    if scons_tools.data.get(env).dependencies["OpenCV21"].ok:
        pass
    elif scons_tools.data.get(env).dependencies["OpenCV22"].ok:
        pass
    else:
        print "Module em2d disabled due to missing dependency OpenCV"
        scons_tools.data.get(env).add_module("em2d",ok=False)
        Return()


env.IMPModuleBuild(version='nightly-21/2/2012',
                   required_modules=["container","core","atom","algebra",
                                              "em","display","gsl","domino"],
                   required_dependencies=["FFTW3","Boost.ProgramOptions",
                                          "Boost.FileSystem"],
                   optional_dependencies=['OpenCV21', 'OpenCV22'],
                   config_macros=config
                   )

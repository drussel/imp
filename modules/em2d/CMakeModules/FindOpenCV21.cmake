# Autogenerated file, run build/tools/setup_cmake.py to regenerate

if(NOT DEFINED OpenCV21_LIBRARIES)
message(STATUS "Checking for OpenCV21")

include(LibFindMacros)

# Use pkg-config to get hints about paths
libfind_pkg_check_modules(OpenCV21_PKGCONF OpenCV21)

# Include dir
find_path(OpenCV21_INCLUDE_DIR
  NAMES opencv/cv.h opencv/cvver.h boost/static_assert.hpp
  PATHS ${OpenCV21_PKGCONF_INCLUDE_DIRS}
)

# Finally the library itself
find_library(OpenCV21_LIBRARY
  NAMES cv cxcore highgui
  PATHS ${OpenCV21_PKGCONF_LIBRARY_DIRS}
)

# Set the include dir variables and the libraries and let libfind_process do the rest.
# NOTE: Singular variables for this library, plural for libraries this this lib depends on.
set(OpenCV21_PROCESS_INCLUDES OpenCV21_INCLUDE_DIR)
set(OpenCV21_PROCESS_LIBS OpenCV21_LIBRARY)
libfind_process(OpenCV21)

if (${OpenCV21_LIBRARY} MATCHES "OpenCV21_LIBRARY-NOTFOUND"
    OR ${OpenCV21_INCLUDE_DIR} MATCHES "OpenCV21_INCLUDE_DIR-NOTFOUND")
  message(STATUS "OpenCV21 not found")
  file(WRITE "${PROJECT_BINARY_DIR}/data/build_info/OpenCV21" "ok=False")
else()
  message(STATUS "OpenCV21 found " ${OpenCV21_INCLUDE_DIR} " " ${OpenCV21_LIBRARY})
  file(WRITE "${PROJECT_BINARY_DIR}/data/build_info/OpenCV21" "ok=True")
  #set(OPENCV21_LINK_PATH ${OpenCV21_LIBRARY_DIRS} CACHE INTERNAL ""  FORCE)
  set(OPENCV21_INCLUDE_PATH ${OpenCV21_INCLUDE_DIR} CACHE INTERNAL "" FORCE)
  set(OPENCV21_LIBRARIES ${OpenCV21_LIBRARY} CACHE INTERNAL "" FORCE)
endif()

else()
message(STATUS "OpenCV21 already setup")

endif(NOT DEFINED OpenCV21_LIBRARIES)
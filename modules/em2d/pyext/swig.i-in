///* Make selected classes extensible in Python */
IMP_SWIG_OBJECT(IMP::em2d, Fine2DRegistrationRestraint,
                                  Fine2DRegistrationRestraints);
IMP_SWIG_VALUE(IMP::em2d, PolarResamplingParameters,
                                  PolarResamplingParametersList);
IMP_SWIG_VALUE(IMP::em2d, ProjectionFinder, ProjectionFinders);
IMP_SWIG_VALUE(IMP::em2d, ProjectionMask, ProjectionMasks);
IMP_SWIG_VALUE(IMP::em2d, MasksManager ,MasksManagers);
// wrapping of a decorator with swigg. Parameters: namespace, name, plural name
IMP_SWIG_DECORATOR(IMP::em2d, ProjectionParameters, ProjectionParametersList);
IMP_SWIG_OBJECT(IMP::em2d, ProjectionParametersSS, ProjectionParametersSSs);
IMP_SWIG_VALUE(IMP::em2d, RegistrationResult, RegistrationResults);
IMP_SWIG_OBJECT(IMP::em2d, Em2DRestraint, Em2DRestraints);

%include "IMP/em2d/ProjectionParameters.h"
//%include "IMP/em2d/Fine2DRegistrationRestraint.h"
//%include "IMP/em2d/model_interaction.h"
%include "IMP/em2d/FFToperations.h"
%include "IMP/em2d/ProjectionMask.h"
%include "IMP/em2d/RegistrationResult.h"
%include "IMP/em2d/scores2D.h"
%include "IMP/em2d/project.h"
%include "IMP/em2d/filenames_manipulation.h"
%include "IMP/em2d/PolarResamplingParameters.h"
%include "IMP/em2d/align2D.h"
%include "IMP/em2d/ProjectionFinder.h"
%include "IMP/em2d/Em2DRestraint.h"


namespace IMP {
  namespace em2d {
    %template(ResultAlign2D) ::std::pair< IMP::algebra::Transformation2D,double >;
  }
}


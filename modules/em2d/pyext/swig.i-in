IMP_SWIG_VALUE(IMP::em2d, PolarResamplingParameters,
                                          PolarResamplingParametersList);
IMP_SWIG_VALUE(IMP::em2d, ProjectionFinder, ProjectionFinders);
IMP_SWIG_VALUE(IMP::em2d, Projection_Mask, Projection_Masks);
IMP_SWIG_VALUE(IMP::em2d, MasksManager ,MasksManagers);
IMP_SWIG_VALUE(IMP::em2d, RegistrationResult, RegistrationResults);

IMP_SWIG_OBJECT(IMP::em2d, ProjectionParametersScoreState,
                                     ProjectionParametersScoreStates);
IMP_SWIG_OBJECT(IMP::em2d, Em2DRestraint, Em2DRestraints);
IMP_SWIG_OBJECT(IMP::em2d, Fine2DRegistrationRestraint,
                                  Fine2DRegistrationRestraints);
IMP_SWIG_OBJECT(IMP::em2d, Image, Images);

// wrapping of a decorator with swigg. Parameters: namespace, name, plural name
IMP_SWIG_DECORATOR(IMP::em2d, ProjectionParameters, ProjectionParametersList);

%include "IMP/em2d/ProjectionParameters.h"
%include "IMP/em2d/PolarResamplingParameters.h"
%include "IMP/em2d/FFToperations.h"
%include "IMP/em2d/ProjectionMask.h"
%include "IMP/em2d/RegistrationResult.h"
%include "IMP/em2d/scores2D.h"
%include "IMP/em2d/project.h"
%include "IMP/em2d/Image.h"
%include "IMP/em2d/ImageReaderWriter.h"
%include "IMP/em2d/SpiderImageReaderWriter.h"
%include "IMP/em2d/filenames_manipulation.h"
%include "IMP/em2d/align2D.h"
%include "IMP/em2d/ProjectionFinder.h"
%include "IMP/em2d/Em2DRestraint.h"
%include "IMP/em2d/Pixel.h"
%include "IMP/em2d/image_processing.h"
// %include "IMP/em2d/opencv_interface.h"


namespace IMP {
  namespace em2d {
    %template(ResultAlign2D)
            ::std::pair< IMP::algebra::Transformation2D,double >;

    %template(_ImageReaderWriter) ::IMP::em2d::ImageReaderWriter<double>;

    %template(_SpiderImageReaderWriter)
                          ::IMP::em2d::SpiderImageReaderWriter<double>;
  }
}

%pythoncode {
  ImageReaderWriter = _ImageReaderWriter
  SpiderImageReaderWriter = _SpiderImageReaderWriter
}


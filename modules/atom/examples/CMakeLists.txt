# Autogenerated file, run tools/build/setup_cmake.py to regenerate

include_directories(${ANN_INCLUDE_PATH}
        ${BOOST.FILESYSTEM_INCLUDE_PATH}
        ${BOOST.PROGRAMOPTIONS_INCLUDE_PATH}
        ${BOOST.RANDOM_INCLUDE_PATH}
        ${BOOST.REGEX_INCLUDE_PATH}
        ${BOOST.SYSTEM_INCLUDE_PATH}
        ${CGAL_INCLUDE_PATH}
        ${GPERFTOOLS_INCLUDE_PATH}
        ${LOG4CXX_INCLUDE_PATH}
        ${TCMALLOC_HEAPCHECKER_INCLUDE_PATH}
        ${TCMALLOC_HEAPPROFILER_INCLUDE_PATH})
link_directories(${ANN_LINK_PATH}
        ${BOOST.FILESYSTEM_LINK_PATH}
        ${BOOST.PROGRAMOPTIONS_LINK_PATH}
        ${BOOST.RANDOM_LINK_PATH}
        ${BOOST.REGEX_LINK_PATH}
        ${BOOST.SYSTEM_LINK_PATH}
        ${CGAL_LINK_PATH}
        ${GPERFTOOLS_LINK_PATH}
        ${LOG4CXX_LINK_PATH}
        ${TCMALLOC_HEAPCHECKER_LINK_PATH}
        ${TCMALLOC_HEAPPROFILER_LINK_PATH})

set(pytests ${PROJECT_SOURCE_DIR}/modules/atom/examples/assess_dope.py
${PROJECT_SOURCE_DIR}/modules/atom/examples/brownian_statistics.py
${PROJECT_SOURCE_DIR}/modules/atom/examples/cg_pdb.py
${PROJECT_SOURCE_DIR}/modules/atom/examples/charmm_forcefield.py
${PROJECT_SOURCE_DIR}/modules/atom/examples/charmm_forcefield_verbose.py
${PROJECT_SOURCE_DIR}/modules/atom/examples/load_protein_restrain_bonds.py
${PROJECT_SOURCE_DIR}/modules/atom/examples/markers.py
${PROJECT_SOURCE_DIR}/modules/atom/examples/molecular_hierarchy.py
${PROJECT_SOURCE_DIR}/modules/atom/examples/rigid_brownian_dynamics.py
${PROJECT_SOURCE_DIR}/modules/atom/examples/score_protein_with_ligand.py
${PROJECT_SOURCE_DIR}/modules/atom/examples/structure_from_sequence.py)

math(EXPR timeout "${IMP_TIMEOUT_FACTOR} * 180")


foreach (test ${pytests})
 GET_FILENAME_COMPONENT(name ${test} NAME_WE)
 add_test("atom.${name}" ${IMP_TEST_SETUP} python ${test})
 set_tests_properties("atom.${name}" PROPERTIES LABELS "IMP.atom;example")
 set_tests_properties("atom.${name}" PROPERTIES TIMEOUT ${timeout})
  #add_dependencies(${name} RMFPython)
endforeach(test)

set(cpp_tests ${PROJECT_SOURCE_DIR}/modules/atom/examples/examples/dope_and_excluded_volume.cpp)

foreach (test ${cpp_tests})
   GET_FILENAME_COMPONENT(name ${test} NAME_WE)
   add_executable("atom.${name}" ${test})
   target_link_libraries("atom.${name}"     imp_atom
    ${IMP_BASE_LIBRARY}
${IMP_CGAL_LIBRARY}
${IMP_ALGEBRA_LIBRARY}
${IMP_KERNEL_LIBRARY}
${IMP_DISPLAY_LIBRARY}
${IMP_SCORE_FUNCTOR_LIBRARY}
${IMP_CORE_LIBRARY}
${IMP_CONTAINER_LIBRARY}
    ${BOOST.FILESYSTEM_LIBRARIES}
${BOOST.REGEX_LIBRARIES}
${BOOST.PROGRAMOPTIONS_LIBRARIES}
${BOOST.SYSTEM_LIBRARIES}
${GPERFTOOLS_LIBRARIES}
${TCMALLOC_HEAPPROFILER_LIBRARIES}
${TCMALLOC_HEAPCHECKER_LIBRARIES}
${LOG4CXX_LIBRARIES}
${BOOST.RANDOM_LIBRARIES}
${CGAL_LIBRARIES}
${ANN_LIBRARIES})
   set_target_properties("atom.${name}" PROPERTIES
                         RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/test/atom/"
                         OUTPUT_NAME "${name}")
   add_test("atom.${name}" ${IMP_TEST_SETUP} "${PROJECT_BINARY_DIR}/test/atom/${name}${CMAKE_EXECUTABLE_SUFFIX}")
   set_tests_properties("atom.${name}" PROPERTIES LABELS "IMP.atom;example")
   set_tests_properties("atom.${name}" PROPERTIES TIMEOUT ${timeout})
   set(executables ${executables} "atom.${name}")
endforeach(test)

add_custom_target("imp_atom_examples" ALL DEPENDS ${executables})

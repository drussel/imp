/* One can add python methods to your module by putting code in %pythoncode blocks
   This function can be called as IMP.examples.say_hello(). */
%pythoncode %{
def say_hello():
    print "hello"
%}

/* Wrap our own classes */
%include "IMP/examples/ExampleRestraint.h"
%include "IMP/examples/ExampleDecorator.h"
%include "IMP/examples/ExampleUnaryFunction.h"
%include "IMP/examples/ExampleRefCounted.h"
%include "IMP/examples/ExampleSingletonModifier.h"
%include "IMP/examples/ExampleTemplateClass.h"

namespace IMP {
  namespace examples {
   // Tell swig to create a copy of the class with dimension 3
   %template(ExampleTemplateClass3D) ExampleTemplateClass<3>;
   // This macro defines the ExampleDecorators and ExampleDecoratorsTemp types for python
   IMP_SWIG_DECORATORS(ExampleDecorator, ExampleDecorators, Particles);

  }
}
///* Make selected classes extensible in Python */
IMP_SWIG_OBJECT(IMP::em2D, Fine2DRegistrationRestraint, Fine2DRegistrationRestraints);
IMP_SWIG_VALUE(IMP::em2D, PolarResamplingParameters, PolarResamplingParametersList);
IMP_SWIG_VALUE(IMP::em2D, ProjectionFinder, ProjectionFinders);
IMP_SWIG_VALUE(IMP::em2D, ProjectionMask, ProjectionMasks);
IMP_SWIG_VALUE(IMP::em2D, MasksManager ,MasksManagers);
IMP_SWIG_DECORATOR(IMP::em2D, ProjectionParameters, ProjectionParametersList);
IMP_SWIG_OBJECT(IMP::em2D, ProjectionParametersSS, ProjectionParametersSSs);
IMP_SWIG_VALUE(IMP::em2D, RegistrationResult, RegistrationResults);


%include "IMP/em2D/ProjectionParameters.h"
//%include "IMP/em2D/Fine2DRegistrationRestraint.h"
%include "IMP/em2D/FFToperations.h"
%include "IMP/em2D/ProjectionMask.h"
%include "IMP/em2D/RegistrationResult.h"
%include "IMP/em2D/scores2D.h"
%include "IMP/em2D/project.h"
%include "IMP/em2D/filenames_manipulation.h"
%include "IMP/em2D/PolarResamplingParameters.h"
%include "IMP/em2D/align2D.h"
%include "IMP/em2D/ProjectionFinder.h"
//%include "IMP/em2D/model_interaction.h"


//
//// wrapping of a decorator with swigg. Parameters: namespace, name, plural name
//IMP_SWIG_DECORATOR(IMP::em2D, ProjectionParameters, ProjectionParametersList);


namespace IMP {
  namespace em2D {

  }
}


# Autogenerated file, run build/tools/setup_cmake.py to regenerate

if(NOT DEFINED ExampleDependency_LIBRARIES)
message(STATUS "Checking for ExampleDependency")

include(LibFindMacros)

# Use pkg-config to get hints about paths
libfind_pkg_check_modules(ExampleDependency_PKGCONF ExampleDependency)

# Include dir
find_path(ExampleDependency_INCLUDE_DIR
  NAMES example_dependency_header.hh
  PATHS ${ExampleDependency_PKGCONF_INCLUDE_DIRS}
)

# Finally the library itself
find_library(ExampleDependency_LIBRARY
  NAMES example_dependency
  PATHS ${ExampleDependency_PKGCONF_LIBRARY_DIRS}
)

# Set the include dir variables and the libraries and let libfind_process do the rest.
# NOTE: Singular variables for this library, plural for libraries this this lib depends on.
set(ExampleDependency_PROCESS_INCLUDES ExampleDependency_INCLUDE_DIR)
set(ExampleDependency_PROCESS_LIBS ExampleDependency_LIBRARY)
libfind_process(ExampleDependency)

if (${ExampleDependency_LIBRARY} MATCHES "ExampleDependency_LIBRARY-NOTFOUND"
    OR ${ExampleDependency_INCLUDE_DIR} MATCHES "ExampleDependency_INCLUDE_DIR-NOTFOUND")
  message(STATUS "ExampleDependency not found")
  file(WRITE "${PROJECT_BINARY_DIR}/data/build_info/ExampleDependency" "ok=False")
else()
  message(STATUS "ExampleDependency found " ${ExampleDependency_INCLUDE_DIR} " " ${ExampleDependency_LIBRARY})
  file(WRITE "${PROJECT_BINARY_DIR}/data/build_info/ExampleDependency" "ok=True")
  #set(EXAMPLEDEPENDENCY_LINK_PATH ${ExampleDependency_LIBRARY_DIRS} CACHE INTERNAL ""  FORCE)
  set(EXAMPLEDEPENDENCY_INCLUDE_PATH ${ExampleDependency_INCLUDE_DIR} CACHE INTERNAL "" FORCE)
  set(EXAMPLEDEPENDENCY_LIBRARIES ${ExampleDependency_LIBRARY} CACHE INTERNAL "" FORCE)
endif()

else()
message(STATUS "ExampleDependency already setup")

endif(NOT DEFINED ExampleDependency_LIBRARIES)
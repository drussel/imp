/* One can add python methods to your module by putting code in %pythoncode blocks
   This function can be called as IMP.examples.say_hello(). */
%pythoncode %{
def say_hello():
    print "hello"
%}

/* Wrap our own classes */
%include "IMP/example/ExampleRestraint.h"
%include "IMP/example/ExampleDecorator.h"
%include "IMP/example/ExampleUnaryFunction.h"
%include "IMP/example/ExampleRefCounted.h"
%include "IMP/example/ExampleSingletonModifier.h"
%include "IMP/example/ExampleTemplateClass.h"

namespace IMP {
  namespace example {
   // Tell swig to create a copy of the class with dimension 3
   %template(ExampleTemplateClass3D) ExampleTemplateClass<3>;
   // This macro defines the ExampleDecorators and ExampleDecoratorsTemp types for python
   IMP_SWIG_DECORATORS(ExampleDecorator, ExampleDecorators, Particles);

  }
}

========================================
===       Build the 3sfd complex    ====
========================================

=====0. user preparation
The user needs to prepare:
I. a file with the subunits list. Each line describes a subunit and contains:
name pdb_file [global/local]_fit
Make sure that the subunit names are unique.
II. a mrc file of the assembly

=====1.generate the parameters file
multifit.py param -i 3sfd.asmb.input -- 3sfd.asmb input/3sfd.subunits.txt 30 input/3sfd_15.mrc 15 3. 335 27.0 -6.0 21.0


=====2. Running MultiFit
The steps to execute:
==2.1. generate the assembly anchor graph

multifit.py anchors 3sfd.asmb.input 3sfd.asmb.anchors 


Files being generated:
3sfd.asmb.anchors.pdb  : The graph in pdb format
3sfd.asmb.anchors.txt  : The graph in txt format
3sfd.asmb.anchors.cmm  : The graph in cmm format

==2.2. generate the fits
multifit.py fit_fft -a 30 -n 1000 -v 60 -c 6 3sfd.asmb.input


FFT fitting for each of the proteins
the -c option means how many CPU will be used for the process


==2.3. generate indexes
We now create fit indexes for the assembly
multifit.py indexes 3sfd 3sfd.asmb.input 10 3sfd.indexes.mapping.input


Files being generated:
3sfd.indexes.mapping.input


==2.4 create a proteomics file
multifit.py auto_proteomics 3sfd.asmb.input 3sfd.asmb.anchors.txt 3sfd.asmb.proteomics

[[ debugging command, get the RMSD of each fit
multifit.py add_fit_rmsd 3sfd.asmb.input 3sfd.asmb.proteomics 3sfd.asmb.indexes.mapping.input 3sfd.asmb.alignment.param
]]


==2.5. assemble fitting solutions

multifit.py align 3sfd.asmb.input 3sfd.asmb.proteomics 3sfd.indexes.mapping.input 3sfd.asmb.alignment.param 3sfd.asmb.combinations 3sfd.asmb.combinations.fit.scores


Files being generated:
3sfd.asmb.combinations the combinations that fit the map
3sfd.asmb.combinations.fit.scores scored by CC


==2.6. cluster the first 100 solutions at 5A RMSD

multifit.py cluster 3sfd.asmb.input 3sfd.asmb.proteomics 3sfd.indexes.mapping.input 3sfd.asmb.alignment.param 3sfd.asmb.combinations  3sfd.asmb.combinations.clustered  -r 5 -m 100


==2.7. score the clustered solutions
$IMP_NEW_FAST/tools/imppy.sh python $IMP_NEW_SRC/modules/multifit/pyext/src/

multifit.py score 3sfd.asmb.input 3sfd.asmb.proteomics 3sfd.indexes.mapping.input 3sfd.asmb.alignment.param 3sfd.asmb.combinations.clustered 3sfd.asmb.combinations.clustered.scores


#write the solutions
multifit.py models asmb.input proteomics.input asmb.indexes.mapping.input combinations.output asmb.mdl

multifit.py models 3sfd.asmb.input 3sfd.asmb.proteomics 3sfd.indexes.mapping.input 3sfd.asmb.combinations.clustered 3sfd.model

It will write the solutions as:
3sfd.asmb.mdl.001.pdb
....


====refine:

%include "IMP/statistics/metric_macros.h"
%include "IMP/statistics/embedding_macros.h"
%include "IMP/statistics/partitional_clustering_macros.h"

IMP_SWIG_ALGEBRA_VALUE_D(IMP::statistics, Histogram);

IMP_SWIG_OBJECT(IMP::statistics, PartitionalClustering, PartitionalClusterings);
IMP_SWIG_OBJECT(IMP::statistics, PartitionalClusteringWithCenter, PartitionalClusteringWithCenters);
IMP_SWIG_BASE_OBJECT(IMP::statistics, Embedding, Embeddings);
IMP_SWIG_OBJECT(IMP::statistics, ConfigurationSetXYZEmbedding, ConfigurationSetXYZEmbeddings);
IMP_SWIG_OBJECT(IMP::statistics, VectorDEmbedding, VectorDEmbeddings);
IMP_SWIG_OBJECT(IMP::statistics, ParticleEmbedding, ParticleEmbeddings);
#if IMP_USE_DEPRECATED
IMP_SWIG_VALUE(IMP::statistics, Histogram, Histograms);
#endif
IMP_SWIG_BASE_OBJECT(IMP::statistics, Metric, Metrics);
IMP_SWIG_OBJECT(IMP::statistics, EuclideanMetric, EuclideanMetrics);
IMP_SWIG_OBJECT(IMP::statistics, ConfigurationSetRMSDMetric, ConfigurationSetRMSDMetrics);
IMP_SWIG_OBJECT(IMP::statistics, RecursivePartitionalClusteringMetric, RecursivePartitionalClusteringMetrics);
IMP_SWIG_OBJECT(IMP::statistics, RecursivePartitionalClusteringEmbedding, RecursivePartitionalClusteringEmbeddings);


%include "IMP/statistics/PartitionalClustering.h"
%include "IMP/statistics/Embedding.h"
%include "IMP/statistics/Metric.h"
%include "IMP/statistics/PartitionalClusteringWithCenter.h"
%include "IMP/statistics/embeddings.h"
%include "IMP/statistics/metrics.h"
%include "IMP/statistics/point_clustering.h"
%include "IMP/statistics/Histogram.h"
%include "IMP/statistics/metric_clustering.h"
%include "IMP/statistics/HistogramD.h"
%include "IMP/statistics/utility.h"
%include "IMP/statistics/RecursivePartitionalClusteringEmbedding.h"
%include "IMP/statistics/RecursivePartitionalClusteringMetric.h"

IMP_SWIG_ALGEBRA_TEMPLATE_D(IMP::statistics, Histogram);
%define IMP_SWIG_STATISTICS_HISTOGRAM_TEMPLATE(DD, NN)
namespace IMP {
  %template(_IntDenseGridStorage##NN##D) algebra::DenseGridStorageD<DD,int>;
  %template(_FloatDenseGridStorage##NN##D) algebra::DenseGridStorageD<DD,double>;
  %template(_HistogramCountsGrid##NN##D) algebra::GridD<DD, algebra::DenseGridStorageD<DD,double>,double,  algebra::DefaultEmbeddingD<DD> >;
}
%enddef
IMP_SWIG_STATISTICS_HISTOGRAM_TEMPLATE(-1,K)
IMP_SWIG_STATISTICS_HISTOGRAM_TEMPLATE(1,1)
IMP_SWIG_STATISTICS_HISTOGRAM_TEMPLATE(2,2)
IMP_SWIG_STATISTICS_HISTOGRAM_TEMPLATE(3,3)
IMP_SWIG_STATISTICS_HISTOGRAM_TEMPLATE(4,4)
IMP_SWIG_STATISTICS_HISTOGRAM_TEMPLATE(5,5)
IMP_SWIG_STATISTICS_HISTOGRAM_TEMPLATE(6,6)

%pythoncode %{
import _histogram
show_histogram= _histogram.show_histogram
%}

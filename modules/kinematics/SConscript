Import('env')

# Uncomment if you need to check for an external library on the system when
# building this module.
#
# If the library is needed to build your module,
# specify required_dependencies=['ExampleLib'] in the IMPModuleBuild call below.
#
# If it is only optional, use 'optional_dependencies' instead, and protect
# C++ code that optionally uses that dependency
# with "#ifdef IMP_USE_EXAMPLEDEPENDENCY".
#
# Here we ship a copy of our dependency with IMP and fall back on that copy if no
# external copy is found.
# import scons_tools.dependency

# scons_tools.dependency.add_external_library(env, "ExampleDependency",
#                                            ["example_dependency"],
#                                            "example_dependency_header.hh",
#    build="""cd %(workdir)s
#    cmake -DCMAKE_INSTALL_PREFIX=%(builddir)s %(srcdir)s
#    make
#    make install""")

# TODO: atom is needed only for the pdb part of the test, so we might move the pdb test to atom?
env.IMPModuleBuild(# The required modules are the other IMP modules that must be built to use this one
                   required_modules=['core', 'algebra', 'atom'],
                   optional_dependencies=["ExampleDependency"])

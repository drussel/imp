/**
 *  \file PairScoreState.cpp
 *  \brief Use a PairModifier applied to a PairContainer to
 *  maintain an invariant
 *
 *  This file is generated by a script (core/tools/make-container).
 *  Do not edit directly.
 *
 *  Copyright 2007-8 Sali Lab. All rights reserved.
 *
 */

#include "IMP/core/PairScoreState.h"

IMPCORE_BEGIN_NAMESPACE

PairScoreState::PairScoreState(PairModifier *before,
                                         PairModifier *after,
                                         ParticlePair v):
  v_(v){
    if (before) f_=before;
    if (after) af_=after;
}

PairScoreState::~PairScoreState(){}


void PairScoreState::do_before_evaluate()
{
  if (!f_) return;
  IMP_LOG(TERSE, "Begin PairsScoreState::update" << std::endl);
  IMP_CHECK_OBJECT(f_);
  IMP::internal::ContainerTraits<ParticlePair>
    ::apply(f_.get(), v_);
  IMP_LOG(TERSE, "End PairsScoreState::update" << std::endl);
}

void PairScoreState::do_after_evaluate(DerivativeAccumulator *da)
{
  if (!af_) return;
  IMP_LOG(TERSE, "Begin PairsScoreState::after_evaluate" << std::endl);
  IMP_CHECK_OBJECT(af_);
  IMP::internal::ContainerTraits<ParticlePair>
    ::apply(af_.get(), v_, da);
  IMP_LOG(TERSE, "End PairsScoreState::after_evaluate" << std::endl);
}

void PairScoreState::show(std::ostream &out) const {
  out << "PairScoreState" << std::endl;
}

IMPCORE_END_NAMESPACE

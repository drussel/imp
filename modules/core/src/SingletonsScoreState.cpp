/**
 *  \file SingletonsScoreState.cpp
 *  \brief Use a SingletonModifier applied to a SingletonContainer to
 *  maintain an invariant
 *
 *  This file is generated by a script (core/tools/make-container).
 *  Do not edit directly.
 *
 *  Copyright 2007-9 Sali Lab. All rights reserved.
 *
 */

#include "IMP/core/SingletonsScoreState.h"
#include <utility>

IMPCORE_BEGIN_NAMESPACE

SingletonsScoreState::SingletonsScoreState(SingletonContainer *c,
                                           SingletonModifier *before,
                                           SingletonModifier *after):
  c_(c){
    if (before) f_=before;
    if (after) af_=after;
}


void SingletonsScoreState::do_before_evaluate()
{
  IMP_OBJECT_LOG;
  if (!f_) return;
  IMP_LOG(TERSE, "Begin SingletonsScoreState::update" << std::endl);
  IMP_CHECK_OBJECT(f_);
  IMP_CHECK_OBJECT(c_);
  c_->apply(f_);
  IMP_LOG(TERSE, "End SingletonsScoreState::update" << std::endl);
}

void SingletonsScoreState::do_after_evaluate(DerivativeAccumulator *da)
{
  IMP_OBJECT_LOG;
  if (!af_) return;
  IMP_LOG(TERSE, "Begin SingletonsScoreState::after_evaluate" << std::endl);
  IMP_CHECK_OBJECT(af_);
  IMP_CHECK_OBJECT(c_);
  c_->apply(af_, da);
  IMP_LOG(TERSE, "End SingletonsScoreState::after_evaluate" << std::endl);
}

void SingletonsScoreState::show(std::ostream &out) const {
  out << "SingletonsScoreState base" << std::endl;
}

IMPCORE_END_NAMESPACE

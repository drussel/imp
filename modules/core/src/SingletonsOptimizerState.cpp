/**
 *  \file SingletonsOptimizerState.cpp
 *  \brief Use a SingletonModifier applied to a SingletonContainer to
 *  maintain an invariant
 *
 *  This file is generated by a script (core/tools/make-container).
 *  Do not edit directly.
 *
 *  Copyright 2007-9 Sali Lab. All rights reserved.
 *
 */

#include "IMP/core/SingletonsOptimizerState.h"
#include <utility>

IMPCORE_BEGIN_NAMESPACE

SingletonsOptimizerState::SingletonsOptimizerState(SingletonContainer *c,
                                           SingletonModifier *gm):
  c_(c){
  f_=gm;
}


void SingletonsOptimizerState::update()
{
  IMP_OBJECT_LOG;
  if (!f_) return;
  IMP_LOG(TERSE, "Begin SingletonsOptimizerState::update" << std::endl);
  IMP_CHECK_OBJECT(f_);
  IMP_CHECK_OBJECT(c_);
  Particles set(c_->particles_begin(), c_->particles_end());
  std::for_each(set.begin(), set.end(),
                SingletonFunctor(f_));

  IMP_LOG(TERSE, "End SingletonsOptimizerState::update" << std::endl);
}



void SingletonsOptimizerState::show(std::ostream &out) const {
  out << "SingletonsOptimizerState base" << std::endl;
}

IMPCORE_END_NAMESPACE

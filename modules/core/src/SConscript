Import('env')
e = env.IMPSharedLibraryEnvironment()

files = [
         'AllNonbondedListScoreState.cpp',
         'AngleRestraint.cpp',
         'AngleTripletScore.cpp',
         'AtomDecorator.cpp',
         'AttributeSingletonScore.cpp',
         'BallMover.cpp',
         'BipartiteNonbondedListScoreState.cpp',
         'BondDecoratorListScoreState.cpp',
         'BondDecoratorRestraint.cpp',
         'BrownianDynamics.cpp',
         'CMMLogOptimizerState.cpp',
         'ClosedCubicSpline.cpp',
         'ConjugateGradients.cpp',
         'ConnectivityRestraint.cpp',
         'ConstantRestraint.cpp',
         'Cosine.cpp',
         'DihedralRestraint.cpp',
         'DistancePairScore.cpp',
         'DistanceRestraint.cpp',
         'DistanceToSingletonScore.cpp',
         'GravityCenterScoreState.cpp',
         'HierarchyDecorator.cpp',
         'ListParticleContainer.cpp',
         'ListParticlePairContainer.cpp',
         'LowestNRestraintSet.cpp',
         'MaxChangeScoreState.cpp',
         'MolecularDynamics.cpp',
         'MolecularHierarchyDecorator.cpp',
         'MonteCarlo.cpp',
         'MoverBase.cpp',
         'NameDecorator.cpp',
         'NonbondedListScoreState.cpp',
         'NonbondedRestraint.cpp',
         'NormalMover.cpp',
         'OpenCubicSpline.cpp',
         'PairChainRestraint.cpp',
         'PairListRestraint.cpp',
         'ParticleContainer.cpp',
         'ParticlePairContainer.cpp',
         'ParticlePairsRestraint.cpp',
         'ParticlesRestraint.cpp',
         'ResidueDecorator.cpp',
         'RestraintSet.cpp',
         'SingletonListRestraint.cpp',
         'SphereDistancePairScore.cpp',
         'SteepestDescent.cpp',
         'TransformedDistancePairScore.cpp',
         'TripletChainRestraint.cpp',
         'TypedPairScore.cpp',
         'VRMLLogOptimizerState.cpp',
         'VelocityScalingOptimizerState.cpp',
         'XYZDecorator.cpp',
         'XYZRDecorator.cpp',
         'bond_decorators.cpp',
         'model_io.cpp',
        ] \
        + SConscript('internal/SConscript')

# Build and install the shared library:
e.IMPSharedLibrary(files, install=True)

Import('env')

files = [
         'AngleRestraint.cpp',
         'AngleTripletScore.cpp',
         'AttributeSingletonScore.cpp',
         'BallMover.cpp',
         'BoundingBox3DSingletonScore.cpp',
         'BoxSweepClosePairsFinder.cpp',
         'CentroidOfRefined.cpp',
         'ChecksScoreState.cpp',
         'ChildrenRefiner.cpp',
         'ClosePairsFinder.cpp',
         'ClosePairsPairScore.cpp',
         'ClosedCubicSpline.cpp',
         'ConjugateGradients.cpp',
         'ConnectivityRestraint.cpp',
         'ConstantRestraint.cpp',
         'Cosine.cpp',
         'CoverRefined.cpp',
         'DerivativesFromRefined.cpp',
         'DerivativesToRefined.cpp',
         'DiameterRestraint.cpp',
         'DihedralRestraint.cpp',
         'DistancePairScore.cpp',
         'DistanceRestraint.cpp',
         'DistanceToSingletonScore.cpp',
         'ExcludedVolumeRestraint.cpp',
         'FixedRefiner.cpp',
         'GridClosePairsFinder.cpp',
         'Hierarchy.cpp',
         'IncrementalBallMover.cpp',
         'LeavesRefiner.cpp',
         'MCCGSampler.cpp',
         'MonteCarlo.cpp',
         'MoverBase.cpp',
         'NearestNeighborsClosePairsFinder.cpp',
         'NormalMover.cpp',
         'OpenCubicSpline.cpp',
         'PairConstraint.cpp',
         'PairRestraint.cpp',
         'QuadConstraint.cpp',
         'QuadRestraint.cpp',
         'QuadraticClosePairsFinder.cpp',
         'RefinedPairsPairScore.cpp',
         'RigidBodyDistancePairScore.cpp',
         'RigidBodyMover.cpp',
         'RigidClosePairsFinder.cpp',
         'SaveModelOptimizerState.cpp',
         'SingletonConstraint.cpp',
         'SingletonRestraint.cpp',
         'SphereDistancePairScore.cpp',
         'SteepestDescent.cpp',
         'TableRefiner.cpp',
         'Transform.cpp',
         'TransformedDistancePairScore.cpp',
         'TripletConstraint.cpp',
         'TripletRestraint.cpp',
         'TypedPairScore.cpp',
         'VolumeRestraint.cpp',
         'XYZ.cpp',
         'XYZR.cpp',
         'rigid_bodies.cpp',
         'utility.cpp',
        ] \
        + SConscript('internal/SConscript')

# Build and install the shared library:
env.IMPModuleLib(files)

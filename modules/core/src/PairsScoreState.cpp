/**
 *  \file PairsScoreState.cpp
 *  \brief Use a PairModifier applied to a PairContainer to
 *  maintain an invariant
 *
 *  This file is generated by a script (core/tools/make-container).
 *  Do not edit directly.
 *
 *  Copyright 2007-8 Sali Lab. All rights reserved.
 *
 */

#include "IMP/core/PairsScoreState.h"
#include "IMP/core/internal/container_helpers.h"

IMPCORE_BEGIN_NAMESPACE

PairsScoreState::PairsScoreState(PairContainer *c,
                                           PairModifier *before,
                                           PairModifier *after):
  c_(c){
    if (before) f_=before;
    if (after) af_=after;
}

PairsScoreState::~PairsScoreState(){}


void PairsScoreState::do_before_evaluate()
{
  if (!f_) return;
  IMP_LOG(TERSE, "Begin PairsScoreState::update" << std::endl);
  IMP_CHECK_OBJECT(f_);
  IMP_CHECK_OBJECT(c_);
  apply(f_.get(), c_.get());
  IMP_LOG(TERSE, "End PairsScoreState::update" << std::endl);
}

void PairsScoreState::do_after_evaluate()
{
  if (!af_) return;
  IMP_LOG(TERSE, "Begin PairsScoreState::after_evaluate" << std::endl);
  IMP_CHECK_OBJECT(af_);
  IMP_CHECK_OBJECT(c_);
  apply(af_.get(), c_.get());
  IMP_LOG(TERSE, "End PairsScoreState::after_evaluate" << std::endl);
}

void PairsScoreState::show(std::ostream &out) const {
  out << "PairsScoreState base" << std::endl;
}

IMPCORE_END_NAMESPACE

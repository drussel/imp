/**
 *  \file ParticlePairContainerSet.cpp
 *  \brief Simple xyzr decorator.
 *
 *  This file is generated by a script (core/tools/make-container).
 *  Do not edit directly.
 *
 *  Copyright 2007-8 Sali Lab. All rights reserved.
 *
 */

#include "IMP/core/ParticlePairContainerSet.h"
#include <algorithm>


IMPCORE_BEGIN_NAMESPACE

ParticlePairContainerSet
::ParticlePairContainerSet(){
}

ParticlePairContainerSet::~ParticlePairContainerSet(){}

bool
ParticlePairContainerSet
::get_contains_particle_pair(ParticlePair vt) const {
  for (ParticlePairContainerConstIterator it= particle_pair_containers_begin();
       it != particle_pair_containers_end(); ++it) {
    if ((*it)->get_contains_particle_pair(vt)) return true;
  }
  return false;
}

void ParticlePairContainerSet::show(std::ostream &out) const {
  IMP_CHECK_OBJECT(this);
  out << "ParticlePairContainerSet with "
      << get_number_of_particle_pairs()
      << " particle_pairs." << std::endl;
}

unsigned int
ParticlePairContainerSet::get_number_of_particle_pairs() const {
  unsigned int sum=0;
  for (ParticlePairContainerConstIterator it= particle_pair_containers_begin();
       it != particle_pair_containers_end(); ++it) {
    sum+= (*it)->get_number_of_particle_pairs();
  }
  return sum;
}

ParticlePair
ParticlePairContainerSet::get_particle_pair(unsigned int i) const {
  for (ParticlePairContainerConstIterator it= particle_pair_containers_begin();
       it != particle_pair_containers_end(); ++it) {
    if ( i >= (*it)->get_number_of_particle_pairs()) {
      i-= (*it)->get_number_of_particle_pairs();
    } else {
      return (*it)->get_particle_pair(i);
    }
  }
  throw IndexException("out of range");
}



IMP_CONTAINER_IMPL(ParticlePairContainerSet,
                   ParticlePairContainer,
                   particle_pair_container,
                   ParticlePairContainerIndex,,,)

IMPCORE_END_NAMESPACE

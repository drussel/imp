/**
 *  \file ListPairContainer.cpp   \brief A list of ParticlePairs.
 *
 *  This file is generated by a script (core/tools/make-container).
 *  Do not edit directly.
 *
 *  Copyright 2007-9 Sali Lab. All rights reserved.
 *
 */

#include "IMP/core/ListPairContainer.h"
#include "IMP/PairModifier.h"
#include "IMP/PairScore.h"
#include <algorithm>


IMPCORE_BEGIN_NAMESPACE

ListPairContainer
::ListPairContainer(const ParticlePairs &ps,
                         std::string name):
  PairContainer(name){
  sorted_=false;
  rev_=0;
  set_particle_pairs(ps);
  set_is_editing(false);
}

ListPairContainer
::ListPairContainer(std::string name):
  PairContainer(name){
  sorted_=true;
  rev_=0;
}


IMP_LIST_IMPL(ListPairContainer, ParticlePair,
              particle_pair, ParticlePair,ParticlePairs,, {
                if (sorted_) std::sort(particle_pairs_begin(),
                                       particle_pairs_end());
                ++rev_;
              },++rev_);


void ListPairContainer::set_is_editing(bool tf) {
  if (tf== !sorted_) return;
  else {
    sorted_=!tf;
    if (sorted_) {
      std::sort(particle_pairs_begin(), particle_pairs_end());
      ++rev_;
    }
  }
}


bool
ListPairContainer::get_contains_particle_pair(ParticlePair vt) const {
  IMP_CHECK_OBJECT(this);
  return std::binary_search(particle_pairs_begin(), particle_pairs_end(), vt);
}

void ListPairContainer::show(std::ostream &out) const {
  IMP_CHECK_OBJECT(this);
  out << "ListPairContainer with " << get_number_of_particle_pairs()
      << " particle_pairs." << std::endl;
}

void ListPairContainer::apply(const PairModifier *sm) {
  sm->apply(access_particle_pairs());
}

void ListPairContainer::apply(const PairModifier *sm,
                               DerivativeAccumulator &da) {
  sm->apply(access_particle_pairs(), da);
}

double ListPairContainer::evaluate(const PairScore *s,
                                        DerivativeAccumulator *da) const {
  return s->evaluate(access_particle_pairs(), da);
}


ParticlePairsTemp ListPairContainer::get_particle_pairs() const {
  return access_particle_pairs();
}

unsigned int ListPairContainer::get_revision() const {
  return rev_;
}

IMPCORE_END_NAMESPACE

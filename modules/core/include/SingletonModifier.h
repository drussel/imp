/**
 *  \file SingletonModifier.h    \brief A Modifier on Particles
 *
 *  This file is generated by a script (core/tools/make-container).
 *  Do not edit directly.
 *
 *  Copyright 2007-8 Sali Lab. All rights reserved.
 */

#ifndef IMPCORE_SINGLETON_MODIFIER_H
#define IMPCORE_SINGLETON_MODIFIER_H

#include "core_exports.h"
#include "internal/core_version_info.h"
#include "internal/container_helpers.h"
#include "SingletonContainer.h"

#include <IMP/base_types.h>

IMP_BEGIN_NAMESPACE
// to keep swig happy
class Particle;
IMP_END_NAMESPACE

IMPCORE_BEGIN_NAMESPACE

//! A base class for modifiers of Particles
/** The primary function of such a class is to change
    the passed particles.
 */
class IMPCOREEXPORT SingletonModifier : public RefCountedObject
{
public:
  //!
  SingletonModifier();

  //!
  virtual ~SingletonModifier();

  //!
  virtual void apply(Particle *a)=0;

  //!
  virtual void show(std::ostream &out = std::cout) const=0;
};

IMP_OUTPUT_OPERATOR(SingletonModifier)

//! Apply the SingletonModifier to each element of the sequence
template <class It>
void apply(SingletonModifier* f, It b, It e) {
  for (It c=b; c != e; ++c) {
    internal::ContainerTraits<Particle>::apply(f, *c);
  }
}

//! Apply a SingletonModifier to each in the Particles
IMPCOREEXPORT inline void apply(SingletonModifier* f,
                               Particles &ps) {
  apply(f, ps.begin(), ps.end());
}

IMPCORE_END_NAMESPACE

#endif  /* IMPCORE_SINGLETON_MODIFIER_H */

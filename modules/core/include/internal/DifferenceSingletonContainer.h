/**
 *  \file DifferenceSingletonContainer.h
 *  \brief Return all singletons from a SingletonContainer
 *
 *  This file is generated by a script (core/tools/make-container).
 *  Do not edit directly.
 *
 *  Copyright 2007-2011 IMP Inventors. All rights reserved.
 */

#ifndef IMPCORE_DIFFERENCE_SINGLETON_CONTAINER_H
#define IMPCORE_DIFFERENCE_SINGLETON_CONTAINER_H

#include "../core_config.h"
#include <IMP/internal/container_helpers.h>
#include <IMP/SingletonContainer.h>
#include <IMP/SingletonModifier.h>
#include <IMP/scoped.h>

IMPCORE_BEGIN_INTERNAL_NAMESPACE

/** \brief Return all unordered singletons of particles taken from
    the SingletonContainer


    It does not do any change tracking. All particles in b must be in a.

    Returns the set b-a.
 */
class IMPCOREEXPORT DifferenceSingletonContainer: public SingletonContainer
{
  IMP::internal::OwnerPointer<SingletonContainer> a_, b_;
  IMP_CONTAINER_DEPENDENCIES(DifferenceSingletonContainer,
                             { ret.resize(2);
                               ret[0]=back_->a_;
                               ret[1]=back_->b_;
                             });
#define IMP_DSC_LOOP(body)                                              \
  ParticleIndexes pisb= b_->get_indexes();                              \
  std::sort(pisb.begin(), pisb.end());                                  \
  IMP_FOREACH_SINGLETON_INDEX(a_, {                                     \
    if (std::binary_search(pisb.begin(),                                \
                           pisb.end(), _1)) continue;                   \
    ParticleIndex item= _1;                                             \
    body;                                                               \
  }                                                                     \
    );

  IMP_IMPLEMENT_SINGLETON_CONTAINER_OPERATIONS(DifferenceSingletonContainer,
                                               IMP_DSC_LOOP);
#undef IMP_DSC_LOOP
 public:
  DifferenceSingletonContainer(SingletonContainer *a, SingletonContainer *b);

#ifndef IMP_DOXYGEN
  bool get_is_up_to_date() const {
    return a_->get_is_up_to_date() && b_->get_is_up_to_date();
  }
#endif

  IMP_SINGLETON_CONTAINER(DifferenceSingletonContainer);
};


IMPCORE_END_INTERNAL_NAMESPACE

#endif  /* IMPCORE_DIFFERENCE_SINGLETON_CONTAINER_H */

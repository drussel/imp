Import('env')

files = [
         'AllBipartitePairContainer.cpp',
         'AllPairContainer.cpp',
         'CloseBipartitePairContainer.cpp',
         'ClosePairContainer.cpp',
         'ConnectingPairContainer.cpp',
         'ConsecutivePairContainer.cpp',
         'InContainerPairFilter.cpp',
         'InContainerQuadFilter.cpp',
         'InContainerSingletonFilter.cpp',
         'InContainerTripletFilter.cpp',
         'ListPairContainer.cpp',
         'ListQuadContainer.cpp',
         'ListSingletonContainer.cpp',
         'ListTripletContainer.cpp',
         'MaximumPairRestraint.cpp',
         'MaximumPairScore.cpp',
         'MaximumQuadRestraint.cpp',
         'MaximumQuadScore.cpp',
         'MaximumSingletonRestraint.cpp',
         'MaximumSingletonScore.cpp',
         'MaximumTripletRestraint.cpp',
         'MaximumTripletScore.cpp',
         'MinimumPairRestraint.cpp',
         'MinimumPairScore.cpp',
         'MinimumQuadRestraint.cpp',
         'MinimumQuadScore.cpp',
         'MinimumSingletonRestraint.cpp',
         'MinimumSingletonScore.cpp',
         'MinimumTripletRestraint.cpp',
         'MinimumTripletScore.cpp',
         'PairContainerSet.cpp',
         'PairsConstraint.cpp',
         'PairsOptimizerState.cpp',
         'PairsRestraint.cpp',
         'QuadContainerSet.cpp',
         'QuadsConstraint.cpp',
         'QuadsOptimizerState.cpp',
         'QuadsRestraint.cpp',
         'SingletonContainerSet.cpp',
         'SingletonsConstraint.cpp',
         'SingletonsOptimizerState.cpp',
         'SingletonsRestraint.cpp',
         'TripletContainerSet.cpp',
         'TripletsConstraint.cpp',
         'TripletsOptimizerState.cpp',
         'TripletsRestraint.cpp',
        ]

# Build and install the shared library:
env.IMPModuleLib(files)

/**
 *  \file ListQuadContainer.h    \brief Store a list of ParticleQuadsTemp
 *
 *  This file is generated by a script (core/tools/make-container).
 *  Do not edit directly.
 *
 *  Copyright 2007-2012 IMP Inventors. All rights reserved.
 */

#ifndef IMPCONTAINER_LIST_QUAD_CONTAINER_H
#define IMPCONTAINER_LIST_QUAD_CONTAINER_H

#include "container_config.h"
#include <IMP/internal/InternalListQuadContainer.h>

IMPCONTAINER_BEGIN_NAMESPACE

//! Store a list of ParticleQuadsTemp
/** \note The indexes can change when particles are inserted
    as the list is maintained in sorted order.
 */
class IMPCONTAINEREXPORT ListQuadContainer:
#if defined(IMP_DOXYGEN) || defined(SWIG)
public QuadContainer
#else
public IMP::internal::InternalListQuadContainer
#endif
{
  typedef IMP::internal::InternalListQuadContainer P;
public:
  ListQuadContainer(const ParticleQuadsTemp &ps);

  //! construct and pass an initial set of Quads
  ListQuadContainer(const ParticleQuadsTemp &ps,
                         std::string name);

  ListQuadContainer(Model *m,
                         std::string name= "ListQuadContainer %1%");
  ListQuadContainer(Model *m, const char *name);

#if defined(IMP_DOXYGEN) || defined(SWIG)
 /** @name Methods to control the contained objects

     This container stores a list of Quad objects. To manipulate
     the list use these methods.
  */
  /**@{*/
  void add_particle_quad(const ParticleQuad& vt);
  void add_particle_quads(const ParticleQuadsTemp &c);
  void set_particle_quads(ParticleQuadsTemp c);
  void clear_particle_quads();
  /**@}*/
  IMP_QUAD_CONTAINER(ListQuadContainer);
#else
  IMP_OBJECT(ListQuadContainer);
#endif
};

IMP_OBJECTS(ListQuadContainer,ListQuadContainers);

IMPCONTAINER_END_NAMESPACE

#endif  /* IMPCONTAINER_LIST_QUAD_CONTAINER_H */

# Autogenerated file, run tools/build/setup_cmake.py to regenerate

if(NOT DEFINED Log4CXX_LIBRARIES)

set(CHECK_COMPILES_BODY "")

check_compiles("_environment" Log4CXX LOG4CXX "#include <log4cxx/ndc.h>" "" "log4cxx" Log4CXX_ok)
if("${Log4CXX_ok}" MATCHES "1")
message(STATUS "Found Log4CXX in environment")
else()
include(LibFindMacros)

# Use pkg-config to get hints about paths
libfind_pkg_check_modules("Log4CXX_PKGCONF" "log4cxx")

# Include dir
find_path("Log4CXX_INCLUDE_DIR"
  NAMES log4cxx/ndc.h
  PATHS ${Log4CXX_PKGCONF_INCLUDE_DIRS}
)

# Finally the library itself
foreach(lib log4cxx)
find_library("${lib}_LIBRARY"
  NAMES ${lib}
  PATHS ${Log4CXX_PKGCONF_LIBRARY_DIRS}
)
set("Log4CXX_LIBRARY" ${Log4CXX_LIBRARY} ${${lib}_LIBRARY})
endforeach(lib)


# Set the include dir variables and the libraries and let libfind_process do the rest.
# NOTE: Singular variables for this library, plural for libraries this this lib depends on.
set(Log4CXX_PROCESS_INCLUDES Log4CXX_INCLUDE_DIR)
set(Log4CXX_PROCESS_LIBS Log4CXX_LIBRARY)
libfind_process(Log4CXX)

if ("${Log4CXX_LIBRARY}" MATCHES ".*NOTFOUND.*"
    OR "${Log4CXX_INCLUDE_DIR}" MATCHES ".*NOTFOUND.*")
  message("Log4CXX not found")
file(WRITE "${PROJECT_BINARY_DIR}/data/build_info/Log4CXX" "ok=False")
else()
  check_compiles("_found" "Log4CXX" "LOG4CXX" "#include <log4cxx/ndc.h>" "${Log4CXX_INCLUDE_DIR}" "${Log4CXX_LIBRARY}" Log4CXX_ok_ok)
  if(${Log4CXX_ok_ok} MATCHES "1")
    message(STATUS "Found Log4CXX at ""${Log4CXX_INCLUDE_DIR}" " " "${Log4CXX_LIBRARY}")
  else()
    message("Log4CXX not found")
file(WRITE "${PROJECT_BINARY_DIR}/data/build_info/Log4CXX" "ok=False")
  endif()
endif()
endif()
else()
message(STATUS "Log4CXX already setup")

endif(NOT DEFINED Log4CXX_LIBRARIES)
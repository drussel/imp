import os.path

Import('emenv', 'get_pyext_environment')

# Get a modified build environment suitable for building Python extensions:
e = get_pyext_environment(emenv, 'IMPEM', cplusplus=True)
e.Append(CPPPATH=['#/build/include', e['EM_CPPPATH'], e['BOOST_CPPPATH']])
e.Append(LIBPATH=['#/build/libs'], LIBS=['imp', 'imp_em'])
e.Append(LIBPATH=[e['EM_LIBPATH']], LIBS=[e['EM_LIBS']])

# _USE_MATH_DEFINES is needed to get math.h to define M_LN2 under w32
e.Append(CPPDEFINES='_USE_MATH_DEFINES')

# Build the Python extension from SWIG interface file:
pyext = e.LoadableModule('#/build/libs/_IMP_em', 'IMPEM.i',
                         SWIGPATH=['#/build/include', e['EM_CPPPATH']],
                         SWIGFLAGS='-python -c++ -naturalvar')
# .py file should also be generated:
gen_pymod = File('IMP_em.py')
e.Depends(gen_pymod, pyext)
# Place in libs directory:
pymod = e.InstallAs('#/build/libs/IMP/em/__init__.py', gen_pymod)

# Install the Python extension and module:
libinst = e.Install(e['pyextdir'], pyext)
pyinst = e.Install(os.path.join(e['pythondir'], 'IMP', 'em'), pymod)
e.Alias('em-install', [libinst, pyinst])

Return('pyext', 'pymod')

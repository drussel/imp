Import('env','get_sharedlib_environment')
# Get an environment suitable for building a shared library:
print 'call get_sharedlib_environment'
env = get_sharedlib_environment(env, 'EM_EXPORTS', cplusplus=True)

# _USE_MATH_DEFINES is needed to get math.h to define M_LN2 under w32
env.Append(CPPDEFINES='_USE_MATH_DEFINES')


# Source files
files = ('MapReaderWriter.cpp','DensityHeader.cpp','DensityMap.cpp','EMReaderWriter.cpp','XplorReaderWriter.cpp','MRCReaderWriter.cpp','KernelParameters.cpp','SampledDensityMap.cpp','CoarseCC.cpp','CoarseCCatIntervals.cpp')


# Build the shared library:
lib = env.SharedLibrary('em', files)


# Install the library:
libinst = env.Install(env['libdir'], lib)
env.Alias('install', [libinst])

# Subdirectories:
pyext = SConscript('pyext/SConscript')

Return('lib', 'pyext')

Import('env','get_sharedlib_environment')
import os
# Get an environment suitable for building a shared library:
print 'call get_sharedlib_environment'
env = get_sharedlib_environment(env, 'EM_EXPORTS', cplusplus=True)

# _USE_MATH_DEFINES is needed to get math.h to define M_LN2 under w32
env.Append(CPPDEFINES='_USE_MATH_DEFINES')


# Source files
files = ('ErrorHandling.cpp','MapReaderWriter.cpp','DensityHeader.cpp','DensityMap.cpp','EMReaderWriter.cpp','XplorReaderWriter.cpp','MRCReaderWriter.cpp','KernelParameters.cpp','SampledDensityMap.cpp','CoarseCC.cpp','CoarseConvolution.cpp','CoarseCCatIntervals.cpp','SurfaceShellDensityMap.cpp')


# Build the shared library:
lib = env.SharedLibrary('em', files)
if env['PLATFORM'] == 'darwin':
    env.AddPostAction (lib, "install_name_tool -id %s %s" % (lib[0].abspath, lib[0].path))
# Install the library:
libinst = env.Install(env['libdir'], lib)
env.Alias('install', [libinst])
if env['PLATFORM'] == 'darwin':
    env.AddPostAction (libinst, "install_name_tool -id %s %s" % (libinst[0].abspath, libinst[0].path))


# Subdirectories:
pyext = SConscript('pyext/SConscript')

Return('lib', 'pyext')

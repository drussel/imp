import os
Import('env', 'get_pyext_environment')
# Get a modified build environment suitable for building Python extensions:
e = get_pyext_environment(env, 'EM', cplusplus=True)
e.Append(CPPPATH=['..'])
e.Append(LIBPATH=['..'], LIBS='em')



# Build the Python extension from SWIG interface file:
pyext = e.LoadableModule('_EM', 'em.i',
                         SWIGFLAGS='-python -c++ -naturalvar -IEMLIB',
                         CPPDEFINES={'_USE_MATH_DEFINES':1})
# .py file should also be generated:
pyem = File('EM.py')
e.Depends(pyem, 'em.i')

# Install the Python extension and any .py files:
libinst = e.Install(e['pyextdir'], pyext)
pyinst = e.Install(e['pythondir'], pyem)

if env['PLATFORM'] == 'darwin':
    libdir= os.path.split(pyext[0].abspath)[0]
    env.AddPostAction (libinst, "install_name_tool -change %s/libem.dylib %s/libem.dylib %s" \
                                   % (libdir,
                                      env['libdir'], libinst[0].path))

e.Alias('install', [libinst, pyinst])

Return('pyext')

/**
 *  \file RemoveInactiveCLASSNAMEsOptimizerState.cpp
 *  \brief Use a CLASSNAMEModifier applied to a CLASSNAMEContainer to
 *  maintain an invariant
 *
 *  This file is generated by a script (core/tools/make-container).
 *  Do not edit directly.
 *
 *  Copyright 2007-2011 IMP Inventors. All rights reserved.
 *
 */

#include "IMP/core/RemoveInactiveCLASSNAMEsOptimizerState.h"
#include "IMP/internal/container_helpers.h"
#include <utility>

IMPCONTAINER_BEGIN_NAMESPACE

RemoveInactiveCLASSNAMEsOptimizerState
::RemoveInactiveCLASSNAMEsOptimizerState(ListCLASSNAMEContainer *c,
                                         std::string name):
  OptimizerState(name),
  c_(c){
}

namespace {
  struct Inactive {
    bool operator()(VARIABLETYPE c) const {
      return IMP::internal::ContainerTraits<CLASSNAME>::is_inactive(c);
    }
  };
}

void RemoveInactiveCLASSNAMEsOptimizerState::update()
{
  IMP_OBJECT_LOG;
  IMP_LOG(TERSE, "Begin RemoveInactiveCLASSNAMEsOptimizerState::update"
          << std::endl);
  IMP_CHECK_OBJECT(c_);
  c_->remove_CLASSNAMEs_if(Inactive());

  IMP_LOG(TERSE, "End RemoveInactiveCLASSNAMEsOptimizerState::update"
          << std::endl);
}



void RemoveInactiveCLASSNAMEsOptimizerState::show(std::ostream &out) const {
  out << "RemoveInactiveCLASSNAMEsOptimizerState" << std::endl;
}

IMPCONTAINER_END_NAMESPACE

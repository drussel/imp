Index: modules/core/include/deprecation.h
===================================================================
--- modules/core/include/deprecation.h	(revision 1106)
+++ modules/core/include/deprecation.h	(working copy)
@@ -1,40 +0,0 @@
-/**
- *  \file deprecation.h
- *  \brief Public control of deprecation
- *
- *  Copyright 2007-8 Sali Lab. All rights reserved.
- *
- */
-
-#ifndef IMPCORE_DEPRECATION_H
-#define IMPCORE_DEPRECATION_H
-
-#include "config.h"
-#include "internal/deprecation.h"
-
-IMPCORE_BEGIN_NAMESPACE
-
-//! Toggle printing of warnings on using deprecated classes
-/** If set to true (the default) a warning is printed every
-    time a class marked as deprecated is used.
- */
-IMPCOREEXPORT void set_print_deprecation_messages(bool tf);
-
-IMPCORE_END_NAMESPACE
-
-/** Mark the class as deprecated. It will print out a message.
-    \param[in] old_classname The class which is deprecated.
-    \param[in] replacement_classname The class which replaces is.
- */
-#define IMP_DEPRECATED(old_classname, replacement_classname)           \
-  if (::IMP::core::internal::get_print_deprecation_message(#old_classname)) { \
-    IMP_LOG(WARNING, "WARNING: Class " << #old_classname                \
-            << " is deprecated "                                        \
-            << "and should not be used.\nUse the class "                \
-            << #replacement_classname << " instead." << std::endl);     \
-    ::IMP::core::internal::set_printed_deprecation_message(#old_classname,\
-                                                           true);       \
-  }
-
-
-#endif /* IMPCORE_DEPRECATION_H */
Index: modules/core/include/internal/deprecation.h
===================================================================
--- modules/core/include/internal/deprecation.h	(revision 1106)
+++ modules/core/include/internal/deprecation.h	(working copy)
@@ -1,23 +0,0 @@
-/**
- *  \file internal/deprecation.h
- *  \brief Macros to mark a class as deprecated.
- *
- *  Copyright 2007-8 Sali Lab. All rights reserved.
- *
- */
-
-#ifndef IMPCORE_INTERNAL_DEPRECATION_H
-#define IMPCORE_INTERNAL_DEPRECATION_H
-
-#include "../config.h"
-#include "../macros.h"
-
-IMPCORE_BEGIN_INTERNAL_NAMESPACE
-
-IMPCOREEXPORT bool get_print_deprecation_message(const char *name);
-
-IMPCOREEXPORT void set_printed_deprecation_message(const char *name, bool tr);
-
-IMPCORE_END_INTERNAL_NAMESPACE
-
-#endif /* IMPCORE_INTERNAL_DEPRECATION_H */
Index: modules/core/include/internal/SConscript
===================================================================
--- modules/core/include/internal/SConscript	(revision 1106)
+++ modules/core/include/internal/SConscript	(working copy)
@@ -7,7 +7,6 @@
          'bbox_nbl_helpers.h',
          'bond_helpers.h',
          'container_helpers.h',
-         'deprecation.h',
          'evaluate_distance_pair_score.h',
          'graph_base.h',
          'hierarchy_helpers.h',
Index: modules/core/include/SConscript
===================================================================
--- modules/core/include/SConscript	(revision 1106)
+++ modules/core/include/SConscript	(working copy)
@@ -93,7 +93,6 @@
          'XYZDecorator.h',
          'XYZRDecorator.h',
          'bond_decorators.h',
-         'deprecation.h',
          'macros.h',
          'model_io.h',
          'utility.h',
Index: modules/core/src/BipartiteNonbondedListScoreState.cpp
===================================================================
--- modules/core/src/BipartiteNonbondedListScoreState.cpp	(revision 1106)
+++ modules/core/src/BipartiteNonbondedListScoreState.cpp	(working copy)
@@ -8,7 +8,7 @@
 #include <IMP/core/BipartiteNonbondedListScoreState.h>
 #include <IMP/core/internal/bbox_nbl_helpers.h>
 #include <IMP/core/XYZDecorator.h>
-#include <IMP/core/deprecation.h>
+#include <IMP/deprecation.h>
 #include <IMP/internal/utility.h>
 
 #include <vector>
Index: modules/core/src/BondDecoratorListScoreState.cpp
===================================================================
--- modules/core/src/BondDecoratorListScoreState.cpp	(revision 1106)
+++ modules/core/src/BondDecoratorListScoreState.cpp	(working copy)
@@ -5,9 +5,9 @@
  *  Copyright 2007-8 Sali Lab. All rights reserved.
  */
 
-#include <IMP/core/deprecation.h>
+#include <IMP/deprecation.h>
 #include <IMP/core/BondDecoratorListScoreState.h>
-#include <IMP/core/deprecation.h>
+#include <IMP/deprecation.h>
 
 #include <algorithm>
 
Index: modules/core/src/internal/SConscript
===================================================================
--- modules/core/src/internal/SConscript	(revision 1106)
+++ modules/core/src/internal/SConscript	(working copy)
@@ -1,7 +1,6 @@
 files = [
          'ParticleGrid.cpp',
          'bbox_nbl_helpers.cpp',
-         'deprecation.cpp',
          'graph_base.cpp',
         ]
 
Index: modules/core/src/internal/deprecation.cpp
===================================================================
--- modules/core/src/internal/deprecation.cpp	(revision 1106)
+++ modules/core/src/internal/deprecation.cpp	(working copy)
@@ -1,47 +0,0 @@
-/**
- *  \file deprecation.cpp   \brief classes for deprecation.
- *
- *  Copyright 2007-8 Sali Lab. All rights reserved.
- *
- */
-
-#include "IMP/core/deprecation.h"
-#include <IMP/log.h>
-
-#include <set>
-
-IMPCORE_BEGIN_INTERNAL_NAMESPACE
-
-namespace {
-
-bool print_deprecation_messages=true;
-
-std::set<std::string> printed_deprecation_messages;
-
-}
-
-bool get_print_deprecation_message(const char *name) {
-  return print_deprecation_messages
-    && printed_deprecation_messages.find(name)
-    == printed_deprecation_messages.end();
-}
-
-void set_printed_deprecation_message(const char *name, bool tr) {
-  if (tr) {
-    printed_deprecation_messages.insert(name);
-  } else {
-    printed_deprecation_messages.erase(name);
-  }
-}
-
-IMPCORE_END_INTERNAL_NAMESPACE
-
-
-IMPCORE_BEGIN_NAMESPACE
-
-void set_print_deprecation_messages(bool tf) {
-  internal::print_deprecation_messages=tf;
-  IMP_LOG(TERSE, "Printing of deprecation messages is now " << tf << std::endl);
-}
-
-IMPCORE_END_NAMESPACE
Index: modules/core/src/MaxChangeScoreState.cpp
===================================================================
--- modules/core/src/MaxChangeScoreState.cpp	(revision 1106)
+++ modules/core/src/MaxChangeScoreState.cpp	(working copy)
@@ -7,7 +7,7 @@
 
 
 #include <IMP/core/MaxChangeScoreState.h>
-#include <IMP/core/deprecation.h>
+#include <IMP/deprecation.h>
 
 #include <IMP/internal/utility.h>
 
Index: modules/core/src/PairChainRestraint.cpp
===================================================================
--- modules/core/src/PairChainRestraint.cpp	(revision 1106)
+++ modules/core/src/PairChainRestraint.cpp	(working copy)
@@ -7,7 +7,7 @@
 
 #include <IMP/core/PairChainRestraint.h>
 #include <IMP/core/XYZDecorator.h>
-#include <IMP/core/deprecation.h>
+#include <IMP/deprecation.h>
 
 #include <IMP/Particle.h>
 #include <IMP/Model.h>
Index: modules/core/src/AllNonbondedListScoreState.cpp
===================================================================
--- modules/core/src/AllNonbondedListScoreState.cpp	(revision 1106)
+++ modules/core/src/AllNonbondedListScoreState.cpp	(working copy)
@@ -10,7 +10,7 @@
 #include <IMP/core/internal/ParticleGrid.h>
 #include <IMP/core/internal/bbox_nbl_helpers.h>
 #include <IMP/core/XYZDecorator.h>
-#include <IMP/core/deprecation.h>
+#include <IMP/deprecation.h>
 
 #include <IMP/internal/utility.h>
 
Index: modules/core/src/NonbondedRestraint.cpp
===================================================================
--- modules/core/src/NonbondedRestraint.cpp	(revision 1106)
+++ modules/core/src/NonbondedRestraint.cpp	(working copy)
@@ -8,7 +8,7 @@
 
 #include <IMP/core/NonbondedRestraint.h>
 #include <IMP/core/NonbondedListScoreState.h>
-#include <IMP/core/deprecation.h>
+#include <IMP/deprecation.h>
 
 #include <IMP/PairScore.h>
 #include <IMP/log.h>
Index: modules/core/src/BondDecoratorRestraint.cpp
===================================================================
--- modules/core/src/BondDecoratorRestraint.cpp	(revision 1106)
+++ modules/core/src/BondDecoratorRestraint.cpp	(working copy)
@@ -12,7 +12,7 @@
 #include <IMP/core/XYZDecorator.h>
 #include <IMP/core/bond_decorators.h>
 #include <IMP/core/internal/evaluate_distance_pair_score.h>
-#include <IMP/core/deprecation.h>
+#include <IMP/deprecation.h>
 #include <IMP/UnaryFunction.h>
 
 #include <boost/lambda/lambda.hpp>
Index: modules/core/pyext/core.i
===================================================================
--- modules/core/pyext/core.i	(revision 1106)
+++ modules/core/pyext/core.i	(working copy)
@@ -189,7 +189,6 @@
 %include "IMP/core/VelocityScalingOptimizerState.h"
 %include "IMP/core/XYZRDecorator.h"
 %include "IMP/core/model_io.h"
-%include "IMP/core/deprecation.h"
 %include "IMP/core/PairChainRestraint.h"
 %include "IMP/core/PairListRestraint.h"
 %include "IMP/core/TripletChainRestraint.h"
Index: kernel/include/deprecation.h
===================================================================
--- kernel/include/deprecation.h	(revision 1106)
+++ kernel/include/deprecation.h	(working copy)
@@ -1,40 +1,40 @@
 /**
  *  \file deprecation.h
- *  \brief Public control of deprecation
+ *  \brief Control display of deprecation information.
  *
  *  Copyright 2007-8 Sali Lab. All rights reserved.
  *
  */
 
-#ifndef IMPCORE_DEPRECATION_H
-#define IMPCORE_DEPRECATION_H
+#ifndef IMP_DEPRECATION_H
+#define IMP_DEPRECATION_H
 
 #include "config.h"
 #include "internal/deprecation.h"
 
-IMPCORE_BEGIN_NAMESPACE
+IMP_BEGIN_NAMESPACE
 
 //! Toggle printing of warnings on using deprecated classes
 /** If set to true (the default) a warning is printed every
     time a class marked as deprecated is used.
  */
-IMPCOREEXPORT void set_print_deprecation_messages(bool tf);
+IMPEXPORT void set_print_deprecation_messages(bool tf);
 
-IMPCORE_END_NAMESPACE
+IMP_END_NAMESPACE
 
 /** Mark the class as deprecated. It will print out a message.
     \param[in] old_classname The class which is deprecated.
     \param[in] replacement_classname The class which replaces is.
  */
 #define IMP_DEPRECATED(old_classname, replacement_classname)           \
-  if (::IMP::core::internal::get_print_deprecation_message(#old_classname)) { \
+  if (::IMP::internal::get_print_deprecation_message(#old_classname)) { \
     IMP_LOG(WARNING, "WARNING: Class " << #old_classname                \
             << " is deprecated "                                        \
             << "and should not be used.\nUse the class "                \
             << #replacement_classname << " instead." << std::endl);     \
-    ::IMP::core::internal::set_printed_deprecation_message(#old_classname,\
+    ::IMP::internal::set_printed_deprecation_message(#old_classname,    \
                                                            true);       \
   }
 
 
-#endif /* IMPCORE_DEPRECATION_H */
+#endif /* IMP_DEPRECATION_H */

Property changes on: kernel/include/deprecation.h
___________________________________________________________________
Added: svn:mergeinfo

Index: kernel/include/internal/deprecation.h
===================================================================
--- kernel/include/internal/deprecation.h	(revision 1106)
+++ kernel/include/internal/deprecation.h	(working copy)
@@ -6,18 +6,17 @@
  *
  */
 
-#ifndef IMPCORE_INTERNAL_DEPRECATION_H
-#define IMPCORE_INTERNAL_DEPRECATION_H
+#ifndef IMP_INTERNAL_DEPRECATION_H
+#define IMP_INTERNAL_DEPRECATION_H
 
 #include "../config.h"
-#include "../macros.h"
 
-IMPCORE_BEGIN_INTERNAL_NAMESPACE
+IMP_BEGIN_INTERNAL_NAMESPACE
 
-IMPCOREEXPORT bool get_print_deprecation_message(const char *name);
+IMPEXPORT bool get_print_deprecation_message(const char *name);
 
-IMPCOREEXPORT void set_printed_deprecation_message(const char *name, bool tr);
+IMPEXPORT void set_printed_deprecation_message(const char *name, bool tr);
 
-IMPCORE_END_INTERNAL_NAMESPACE
+IMP_END_INTERNAL_NAMESPACE
 
-#endif /* IMPCORE_INTERNAL_DEPRECATION_H */
+#endif /* IMP_INTERNAL_DEPRECATION_H */

Property changes on: kernel/include/internal/deprecation.h
___________________________________________________________________
Added: svn:mergeinfo

Index: kernel/include/internal/SConscript
===================================================================
--- kernel/include/internal/SConscript	(revision 1106)
+++ kernel/include/internal/SConscript	(working copy)
@@ -2,7 +2,7 @@
          'ref_counting.h', 'ObjectContainer.h',
          'kernel_version_info.h', 'constants.h', 'units.h',
          'utility.h', 'Unit.h', 'ExponentialNumber.h', 'key_helpers.h',
-         'log_internal.h']
+         'log_internal.h', 'deprecation.h']
 
 files = [File(f) for f in files]
 Return('files')
Index: kernel/include/SConscript
===================================================================
--- kernel/include/SConscript	(revision 1106)
+++ kernel/include/SConscript	(working copy)
@@ -8,7 +8,7 @@
          'UnaryFunction.h', 'PairScore.h', 'SingletonScore.h', 'macros.h',
          'TripletScore.h', 'exception.h', 'VersionInfo.h',
          'Object.h', 'Pointer.h', 'RefCountedObject.h', 'ParticleRefiner.h',
-         'container_macros.h']
+         'container_macros.h', 'deprecation.h']
 
 # Subdirectories
 files = [File(f) for f in files] \
Index: kernel/include/utility.h
===================================================================
--- kernel/include/utility.h	(revision 1106)
+++ kernel/include/utility.h	(working copy)
@@ -10,11 +10,16 @@
 
 #include "macros.h"
 
+#include <boost/version.hpp>
+
+#if BOOST_VERSION >= 103500
+#include <boost/math/special_functions/fpclassify.hpp>
+#else
 #ifdef __GNUC__
 #include <cmath>
-#endif
+#endif // __GNUC__
+#endif // BOOST_VERSION
 
-
 IMP_BEGIN_NAMESPACE
 
 //! Compute the square of a number
@@ -29,27 +34,20 @@
 /** With certain compiler settings the compiler can optimize
  out a!=a (and certain intel chips had issues with it too).
  */
-inline bool is_nan(const float& a) {
+template <class T>
+inline bool is_nan(const T& a) {
+#if BOOST_VERSION >= 103500
+  return (boost::math::isnan)(a);
+#else
   // Not all gcc versions include C99 math
 #if defined(_GLIBCXX_USE_C99_MATH) && defined(__GNUC__)
-  return std::isnan(a);
+  return (std::isnan)(a);
 #else
   return a != a;
-#endif
+#endif // C99
+#endif // BOOST_VERSION
 }
 
-//! Return true if a number is NaN
-/** With certain compiler settings the compiler can optimize
- out a!=a (and certain intel chips had issues with it too).
- */
-inline bool is_nan(const double& a) {
-#if defined(_GLIBCXX_USE_C99_MATH) && defined(__GNUC__)
-  return std::isnan(a);
-#else
-  return a != a;
-#endif
-}
-
 IMP_END_NAMESPACE
 
 #endif  /* IMP_UTILITY_H */
Index: kernel/src/internal/SConscript
===================================================================
--- kernel/src/internal/SConscript	(revision 1106)
+++ kernel/src/internal/SConscript	(working copy)
@@ -1,6 +1,6 @@
 files = [
          'constants.cpp',
-         'kernel_version_info.cpp',
+         'kernel_version_info.cpp', 'deprecation.cpp'
         ]
 
 files = [File(x) for x in files]
Index: kernel/src/internal/deprecation.cpp
===================================================================
--- kernel/src/internal/deprecation.cpp	(revision 1106)
+++ kernel/src/internal/deprecation.cpp	(working copy)
@@ -5,12 +5,12 @@
  *
  */
 
-#include "IMP/core/deprecation.h"
-#include <IMP/log.h>
+#include "IMP/deprecation.h"
+#include "IMP/log.h"
 
 #include <set>
 
-IMPCORE_BEGIN_INTERNAL_NAMESPACE
+IMP_BEGIN_INTERNAL_NAMESPACE
 
 namespace {
 
@@ -34,14 +34,14 @@
   }
 }
 
-IMPCORE_END_INTERNAL_NAMESPACE
+IMP_END_INTERNAL_NAMESPACE
 
 
-IMPCORE_BEGIN_NAMESPACE
+IMP_BEGIN_NAMESPACE
 
 void set_print_deprecation_messages(bool tf) {
   internal::print_deprecation_messages=tf;
   IMP_LOG(TERSE, "Printing of deprecation messages is now " << tf << std::endl);
 }
 
-IMPCORE_END_NAMESPACE
+IMP_END_NAMESPACE

Property changes on: kernel/src/internal/deprecation.cpp
___________________________________________________________________
Added: svn:mergeinfo

Index: kernel/pyext/IMP.i
===================================================================
--- kernel/pyext/IMP.i	(revision 1106)
+++ kernel/pyext/IMP.i	(working copy)
@@ -122,6 +122,7 @@
 
 %include "IMP/base_types.h"
 %include "Vector3D.i"
+%include "IMP/deprecation.h"
 %include "IMP/Object.h"
 %include "IMP/RefCountedObject.h"
 %include "IMP/Index.h"

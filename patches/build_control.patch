Index: tools/__init__.py
===================================================================
--- tools/__init__.py	(revision 1217)
+++ tools/__init__.py	(working copy)
@@ -70,12 +70,19 @@
         import distutils.sysconfig
         return distutils.sysconfig.get_python_inc()
 
-def _add_release_flags(env):
+def _add_build_flags(env):
     """Add compiler flags for release builds, if requested"""
-    if env.get('release', False):
+    
+    if env.get('build', 'release') == 'fast':
         env.Append(CPPDEFINES=['NDEBUG'])
         if env['CC'] == 'gcc':
-            env.Append(CCFLAGS=['-O3'])
+            env.Append(CCFLAGS=['-O3', "-Wall"])
+    elif env.get('build', 'release') == 'debug':
+        if env['CC'] == 'gcc':
+            env.Append(CCFLAGS=["-Wall","-g"])
+    else:
+        if env['CC'] == 'gcc':
+            env.Append(CCFLAGS=["-Wall"])
 
 def CheckGNUHash(context):
     """Disable GNU_HASH-style linking (if found) for backwards compatibility"""
@@ -234,8 +241,6 @@
                 BUILDERS = {'GenerateDoxFromIn':
                             generate_doxygen.GenerateDoxFromIn,
                             'MakeExamples': make_examples.MakeExamples})
-    if env['CC'] == 'gcc':
-        env.Append(CCFLAGS="-Wall -g")
     if env.get('include', None) is not None:
         env['include'] = [os.path.abspath(x) for x in \
                           env['include'].split(os.path.pathsep)]
@@ -246,7 +251,7 @@
         env.Prepend(LIBPATH=env['lib'])
     else:
         env['lib'] = []
-    _add_release_flags(env)
+    _add_build_flags(env)
 
     sys = platform.system()
     if sys == 'SunOS':
@@ -440,9 +445,11 @@
     vars.Add(BoolVariable('wine',
                           'Build using MS Windows tools via Wine emulation',
                           False))
-    vars.Add(BoolVariable('release',
-                          'Disable most runtime checks (e.g. for releases)',
-                          False))
+    vars.Add(PathVariable('build',
+                          "Set to \'release\' for a normal build,"
+                          +" or debug to disable optimization,"
+                          +" or fast to disable most runtime checks",
+                          "release", PathVariable.PathAccept))
     vars.Add(BoolVariable('linksysv',
                           'Link with old-style SysV, not GNU hash, for ' + \
                           'binary compatibility', False))

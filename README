Elaborate documentation and an installation guide can be found at
http://salilab.org/imp/nightly/doc/html/

Building IMP:
=====================

To build IMP source found in `imp-source` and install it in `path_to_install` do:

      1. `mkdir imp-release`
      2. `cd imp-release`
      3. `ln -s ../imp-src/SConstruct`
      4. `ln -s ../imp-src/scons_tools`
      5. `scons -j 8 repository=../imp-source prefix=path_to_install install`

See `scons --help` for lots of options and
http://salilab.org/imp/nightly/doc/html/installation.html for more
details.

To run IMP without installing, do `scons -j 8
repository=../imp-source` instead. And then run programs or python,
prefixing with `tools/imppy.sh`. For example, `./tools/imppy.sh python
build/doc/examples/chain.py`.

Copyright and License information
=================================

IMP is Copyright 2007-2012 IMP Inventors. The IMP Inventors are
Andrej Sali, Ben Webb, Daniel Russel, Keren Lasker, Dina Schneidman,
Javier Velazquez-Muriel, Friedrich Foerster, Elina Tjioe, Hao Fan,
Seung Joong Kim.

IMP is largely available under the GNU Lesser GPL; see the file COPYING.LGPL
for the full text of this license. Some IMP modules are available under the
GNU GPL (see the file COPYING.GPL). Please refer to the documentation at
http://salilab.org/imp/doc.html for more detail.

Files and folders structure:
============================

Files under the build directory (even pure Python modules) are built from sources
elsewhere within IMP. Do not edit them there - any changes you make will be
overwritten! You should also not add any files to these directories, as they
will be deleted.

The lib directory contains Python modules (both pure Python, in the IMP
subdirectory, and C++ extensions, as _IMP_foo.so in the top-level directory)
and the IMP C++ libraries (as libimp_foo.so in the top-level directory).
Rationale: Windows searches for C++ dynamic libraries in the same directory
as C++ Python extensions.

The include directory contains all public header files under the IMP
subdirectory. Modules are in named subdirectories under that.

The swig directory contains all SWIG interface (.i) files used to build
the Python interface.

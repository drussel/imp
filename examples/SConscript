from tools import pyscanner
import os.path

Import('env', 'bin')

# All example scripts except for fragments:
example_py = [x for x in Glob("*.py") + Glob("*/*.py") \
              if 'fragments' not in x.path]

example_cpp = [x for x in Glob("*.cpp") + Glob("*/*.cpp") \
              if 'fragments' not in x.path]


e = env.Clone()

# Custom builder to run unit tests:
def builder_unit_test(target, source, env):
    bin = source[0].abspath
    root= os.path.split(os.path.split(bin)[0])[0]
    failed=False
    for src in source[1:]:
        #(dir, script) = os.path.split(src.abspath)
        app = "cd %s && %s %s %s > /dev/null" % (root, bin, e['PYTHON'], src.abspath)
        if env.Execute(app) != 0:
            failed=True
            file(str(target[0]), 'w').write('FAILED\n')
        else:
            file(str(target[0]), 'w').write('PASSED\n')
    if failed:
        print "examples FAILED"
        return 1

e.Append(BUILDERS = {'Test': Builder(action=builder_unit_test,
                                     source_scanner=pyscanner.PythonScanner)})

# Test all scripts:
test = e.Test("examples.passed", bin + example_py+example_cpp)
e.Alias("test", test)
e.AlwaysBuild("examples.passed")

# Install all scripts:
docdir = os.path.join(env['docdir'], 'examples')
e.Install(docdir, example_py)
e.Alias('docinstall', docdir)

Return('test')

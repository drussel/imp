
import scons_tools.module
from SCons.Script import Glob, Dir, File, Builder, Action, Exit
import os
import sys
import re


def _action_version_h(target, source, env):
    vars= scons_tools.module._get_module_variables(env)
    #print "opening h at " +target[0].abspath + " for module %(module)s"%vars
    h = file(target[0].abspath, 'w')
    #print "Generating "+str(h)
    print >> h, """/*
 * \\file %(module_include_path)s/%(module)s_version.h
 * \\brief Provide the module version in a way available to the preprocessor
 *
 * This header is auto-generated by scons_tools/module/_version_h.py; it should not be
 * edited manually.
 *
 * Copyright 2007-2012 IMP Inventors. All rights reserved.
 *
 */

#ifndef %(EXPORT)s_VERSION_H
#define %(EXPORT)s_VERSION_H

""" % vars

    vers= source[0].get_contents()
    if vers.startswith("nightly-"):
        vers=vers[8:]
        if vers.find('/'):
            version=vers.split("/")
        else:
            version=vers.split("-")
        print >> h, "#define %(PREPROC)s_IS_NIGHTLY 1"%vars
        print >> h, "#define %(PREPROC)s_VERSION_DAY "%vars + version[0]
        print >> h, "#define %(PREPROC)s_VERSION_MONTH "%vars + version[1]
        print >> h, "#define %(PREPROC)s_VERSION_YEAR "%vars + version[1]
    else:
        version=vers.split(".")
        print >> h, "#define %(PREPROC)s_MAJOR_VERSION 1"%vars+version[0]
        print >> h, "#define %(PREPROC)s_MINOR_VERSION 1"%vars+version[0]
    print >> h, """
#endif  /* %(EXPORT)s_CONFIG_H */""" % vars

def _print_version_h(target, source, env):
    vars= scons_tools.module._get_module_variables(env)
    print "Generating %(module)s_config.h"%vars

VersionH = Builder(action=Action(_action_version_h,
                                 _print_version_h))
